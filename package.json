{
  "name": "www-covidcast",
  "version": "1.9.3",
  "private": true,
  "license": "MIT",
  "description": "",
  "homepage": "https://github.com/cmu-delphi/www-covidcast",
  "bugs": {
    "url": "https://github.com/cmu-delphi/www-covidcast/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cmu-delphi/www-covidcast.git"
  },
  "main": "public/bundle.js",
  "files": [
    "public"
  ],
  "scripts": {
    "gen": "node ./scripts/generateDescriptions.js",
    "process-geo": "node ./src/maps/process.js",
    "start": "npm run gen && cross-env NODE_ENV=development webpack-dev-server -d --open",
    "build": "npm run gen && cross-env NODE_ENV=production webpack -p",
    "deploy": "npm run build; gh-pages -d public",
    "zip": "cd public && bestzip ../release.zip *",
    "prettier": "prettier --write \"**/*\"",
    "lint": "eslint src --ext .js,.svelte && prettier --check \"**/*\"",
    "lint:fix": "eslint src --ext .js,.svelte --fix && prettier --write \"**/*\"",
    "release": "release-it --disable-metrics",
    "changelog": "node ./scripts/changelog.js",
    "test": "jest --passWithNoTests",
    "test:e2e": "concurrently \"http-server\" \"cypress run\"",
    "cy:open": "cypress open",
    "serve": "http-server",
    "prepare": "echo 'dummy prepare since prepack has no dev dependencies'",
    "prepack": "npm run build"
  },
  "devDependencies": {
    "@babel/core": "^7.11.6",
    "@babel/preset-env": "^7.11.5",
    "@mapbox/geojson-extent": "^0.3.2",
    "@octokit/request": "^5.4.9",
    "@popperjs/core": "^2.4.4",
    "@testing-library/cypress": "^7.0.1",
    "@testing-library/jest-dom": "^5.11.5",
    "@testing-library/svelte": "^3.0.0",
    "@turf/boolean-disjoint": "^6.0.2",
    "@turf/center-of-mass": "^6.0.1",
    "@turf/intersect": "^6.1.3",
    "@turf/meta": "^6.0.2",
    "@types/lodash-es": "^4.17.3",
    "babel-jest": "^26.6.1",
    "babel-loader": "^8.1.0",
    "bestzip": "^2.1.7",
    "clean-webpack-plugin": "^3.0.0",
    "compute-logspace": "^1.0.0",
    "concurrently": "^5.3.0",
    "copy-webpack-plugin": "^6.1.0",
    "core-js": "^3.6.5",
    "cross-env": "^7.0.2",
    "css-loader": "^4.3.0",
    "cypress": "^5.5.0",
    "cypress-image-snapshot": "^3.1.1",
    "d3-color": "^2.0.0",
    "d3-dsv": "^2.0.0",
    "d3-format": "^2.0.0",
    "d3-random": "^2.2.2",
    "d3-scale": "^3.2.2",
    "d3-scale-chromatic": "^2.0.0",
    "d3-time": "^2.0.0",
    "d3-time-format": "^3.0.0",
    "dirty-reprojectors": "0.0.2",
    "eslint": "^7.9.0",
    "eslint-plugin-cypress": "^2.11.2",
    "eslint-plugin-svelte3": "^2.7.3",
    "file-loader": "^6.1.0",
    "gh-pages": "^3.1.0",
    "html-webpack-harddisk-plugin": "^1.0.2",
    "html-webpack-plugin": "^4.4.1",
    "http-server": "^0.12.3",
    "husky": "^4.3.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^26.6.1",
    "js-cookie": "^2.2.1",
    "js-yaml": "^3.14.0",
    "lint-staged": "^10.3.0",
    "lodash-es": "^4.17.15",
    "mapbox-gl": "^1.12.0",
    "marked": "^1.2.0",
    "mini-css-extract-plugin": "^0.11.2",
    "node-fetch": "^2.6.1",
    "nouislider": "^14.6.1",
    "optimize-css-assets-webpack-plugin": "^5.0.4",
    "prettier": "^2.1.1",
    "prettier-plugin-svelte": "^1.2.1",
    "raw-loader": "^4.0.1",
    "regenerator-runtime": "^0.13.7",
    "release-it": "^14.0.2",
    "resize-observer-polyfill": "^1.5.1",
    "sass": "^1.28.0",
    "sass-loader": "^10.0.5",
    "seedrandom": "^3.0.5",
    "style-loader": "^1.3.0",
    "svelte": "^3.25.0",
    "svelte-icons": "^2.1.0",
    "svelte-jester": "^1.1.5",
    "svelte-loader": "^2.13.6",
    "svelte-loader-hot": "^0.3.1",
    "terser-webpack-plugin": "^4.2.0",
    "topojson-client": "^3.1.0",
    "topojson-server": "^3.0.1",
    "url-loader": "^4.1.0",
    "vega": "^5.15.0",
    "vega-embed": "^6.12.2",
    "vega-lite": "^4.15.0",
    "webpack": "^4.44.1",
    "webpack-cli": "^3.3.12",
    "webpack-dev-server": "^3.11.0"
  },
  "dependencies": {
    "uikit": "^3.5.9"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npx lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,svelte}": "eslint --cache --fix",
    "*.{js,css,md,svelte}": "prettier --write"
  }
}
