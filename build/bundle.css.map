{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../MapBox.svelte",
    "../../Options.svelte",
    "../../Tabs.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte';\n  import Options from './Options.svelte';\n  import Tabs from './Tabs.svelte';\n  import Time from './Time.svelte';\n  import MapBox from './MapBox.svelte';\n  import Graph from './Graph.svelte';\n\n  import { data, sensors, times, signalType, currentRange } from './stores.js';\n\n  import * as d3 from 'd3';\n\n  const ENDPOINT = 'https://delphi.cmu.edu/epidata/api.php?source=covidcast&time_type=day';\n  const ENDPOINT_META = 'https://delphi.cmu.edu/epidata/api.php?source=covidcast_meta';\n\n  // this is for graph dev purposes\n  let use_real_data = true;\n\n  if (use_real_data === false) {\n    console.log('using fake network requests');\n    onMount(_ => {\n      d3.json('./temp_graph_data/meta_request_results.json').then(meta => {\n        console.log(meta);\n        let queries = [];\n        let entries = [];\n        let timeMap = new Map();\n        $sensors.forEach(sens => {\n          let date = meta.epidata.find(d => d.data_source === sens.id);\n          let minDate = date.min_time;\n          let maxDate = date.max_time;\n          timeMap.set(sens.id, [minDate, maxDate]);\n          sens.levels.forEach(l => {\n            entries.push([sens.id, l]);\n          });\n        });\n\n        // faking queries with d3.json()\n        queries.push(d3.json('./temp_graph_data/fb_survey_cli_county_20200406-20200413.json'));\n        queries.push(d3.json('./temp_graph_data/fb_survey_cli_msa_20200406-20200413.json'));\n        queries.push(d3.json('./temp_graph_data/google-survey_cli_county_20200411-20200416.json'));\n        queries.push(d3.json('./temp_graph_data/quidel_negativeratio_county_20200201-20200409.json'));\n        queries.push(d3.json('./temp_graph_data/quidel_negativeratio_msa_20200201-20200409.json'));\n        queries.push(d3.json('./temp_graph_data/ght_smoothedsearch_msa_20200201-20200412.json'));\n\n        let dat = {};\n        Promise.all(queries).then(d => {\n          console.log(d);\n          entries.forEach((ent, i) => {\n            dat[ent[0]] ? '' : (dat[ent[0]] = {});\n            dat[ent[0]][ent[1]] = d[i].epidata;\n          });\n          times.set(timeMap);\n          data.set(dat);\n        });\n      });\n    });\n  }\n\n  if (use_real_data === true) {\n    console.log('using real network requests');\n    // Fetch data for each sensor and granularity\n    onMount(_ => {\n      fetch(ENDPOINT_META)\n        .then(d => d.json())\n        .then(meta => {\n          console.log(meta);\n          let queries = [];\n          let entries = [];\n          let timeMap = new Map();\n          $sensors.forEach(sens => {\n            let date = meta.epidata.find(d => d.data_source === sens.id);\n            let minDate = date.min_time;\n            let maxDate = date.max_time;\n            timeMap.set(sens.id, [minDate, maxDate]);\n            sens.levels.forEach(l => {\n              let query =\n                ENDPOINT +\n                '&data_source=' +\n                sens.id +\n                '&signal=' +\n                sens.signal +\n                '&geo_type=' +\n                l +\n                '&time_values=' +\n                minDate +\n                '-' +\n                maxDate +\n                '&geo_value=*';\n              queries.push(fetch(query).then(d => d.json()));\n              entries.push([sens.id, l]);\n            });\n          });\n          let dat = {};\n          Promise.all(queries).then(d => {\n            console.log(d);\n            entries.forEach((ent, i) => {\n              dat[ent[0]] ? '' : (dat[ent[0]] = {});\n              dat[ent[0]][ent[1]] = d[i].epidata;\n            });\n            times.set(timeMap);\n            data.set(dat);\n          });\n        });\n    });\n  }\n</script>\n\n<style>\n  .options-container {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 1000;\n    width: 250px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 8px;\n    padding: 10px 10px;\n    box-sizing: border-box;\n\n    transition: all 0.1s ease-in;\n\n    /* background-color: black; */\n    /* border: 1px solid black; */\n  }\n\n  .tabs-container {\n    position: absolute;\n    top: 10px;\n    left: 50px;\n    right: 50px;\n    z-index: 1000;\n    /* max-width: 750px; */\n    /* background-color: rgba(255, 255, 255, 0.7); */\n    border-radius: 8px;\n    padding: 10px 10px;\n    box-sizing: border-box;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    transition: all 0.1s ease-in;\n\n    /* background-color: black; */\n    /* border: 1px solid black; */\n  }\n\n  .legend-container {\n    position: absolute;\n    bottom: calc(2vh + 410px);\n    right: 2vh;\n    z-index: 1001;\n    width: 400px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 1rem;\n    padding: 10px 15px;\n    box-sizing: border-box;\n    display: inline-flex;\n    justify-content: space-between;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .graph-container {\n    position: absolute;\n    bottom: 2vh;\n    right: 2vh;\n    z-index: 1001;\n    max-width: 400px;\n    height: 400px;\n    width: 400px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 1rem;\n    padding: 10px 15px;\n    box-sizing: border-box;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .time-container {\n    position: absolute;\n    bottom: 4vh;\n    left: calc(2vh + 400px);\n    z-index: 1002;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 1rem;\n    padding: 5px 10px;\n    box-sizing: border-box;\n    width: 500px;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .options-container:hover,\n  .time-container:hover,\n  .graph-container:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  .color {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    display: inline-block;\n    border: 1px solid #dbdbdb;\n  }\n\n  .legend-container p {\n    align-items: center;\n    justify-content: center;\n    display: flex;\n  }\n\n  .legend-bar {\n    background: linear-gradient(to right, #fff, #c41230);\n    width: 300px;\n    height: 20px;\n  }\n\n  .dec {\n    background-color: #224477;\n  }\n  .const {\n    background-color: #fff;\n  }\n  .inc {\n    background-color: #c41230;\n  }\n</style>\n\n<MapBox />\n\n<div class=\"options-container\">\n  <Options />\n</div>\n\n<div class=\"tabs-container\">\n  <Tabs />\n</div>\n\n<div class=\"time-container\">\n  <Time />\n</div>\n\n<div class=\"legend-container\">\n  {#if $signalType === 'direction'}\n    <p>\n      <span class=\"color dec\" />\n      Decreasing\n    </p>\n    <p>\n      <span class=\"color const\" />\n      Constant\n    </p>\n    <p>\n      <span class=\"color inc\" />\n      Increasing\n    </p>\n  {:else}\n    <p>None</p>\n    <p class=\"legend-bar\" />\n    <p>High</p>\n  {/if}\n</div>\n\n<div class=\"graph-container\">\n  <Graph />\n</div>\n\n<!--\n<div class=\"pure-g\">\n  <div class=\"pure-u-1 pure-u-md-2-3\">\n    <div class=\"block\">\n      <Options />\n    </div>\n  </div>\n  <div class=\"pure-u-1 pure-u-md-1-3\">\n    <div class=\"block\">\n      <Time />\n    </div>\n  </div>\n</div>\n<div class=\"pure-g\">\n  <div class=\"pure-u-1 pure-u-md-2-3\">\n    <div class=\"block\">\n      <MapBox />\n    </div>\n  </div>\n  <div class=\"pure-u-1 pure-u-md-1-3\">\n    <div class=\"block\">\n      <Graph />\n    </div>\n  </div>\n</div> -->\n",
    "<script>\n  import mapboxgl from 'mapbox-gl';\n  import {\n    levels,\n    currentRegion,\n    geojsons,\n    currentLevel,\n    currentSensor,\n    currentData,\n    currentRange,\n    data,\n    signalType,\n  } from './stores.js';\n\n  const LAT = -1.2;\n  const LON = -0.5;\n  const ZOOM = 4.3; // should be set to 4.4 as default\n\n  let container;\n  let map;\n\n  // Boolean tracking if the map has been initialized.\n  let mounted = false;\n\n  // If it hasn't been initialized and we have geojsons and initial data, create map.\n  $: if (!map && $geojsons.size !== 0 && $currentData.length !== 0) initializeMap();\n\n  // Update the map when sensor or level changes.\n  currentLevel.subscribe(_ => updateMap());\n  currentSensor.subscribe(_ => updateMap());\n  currentData.subscribe(_ => updateMap());\n  signalType.subscribe(_ => updateMap());\n\n  function updateMap() {\n    if (!mounted) return;\n\n    let minMax = [999999999, -1];\n    let mappedVals = new Map();\n    let geoIds = new Set(\n      $currentData.map(d => {\n        let dat = d[$signalType];\n        minMax[0] = dat < minMax[0] ? dat : minMax[0];\n        minMax[1] = dat > minMax[1] ? dat : minMax[1];\n        if (dat) {\n          mappedVals.set(d.geo_value, d[$signalType]);\n        }\n        return d.geo_value;\n      }),\n    );\n    currentRange.set(minMax);\n\n    let dat = $geojsons.get($currentLevel);\n    dat.features.forEach(d => {\n      let id;\n      if ($currentLevel === 'county') {\n        id = d.properties.GEO_ID.slice(-5);\n      } else if ($currentLevel === 'msa') {\n        id = d.properties.CBSAFP;\n      }\n      d.properties.id = id;\n      if (geoIds.has(id) && mappedVals.get(id)) {\n        d.properties.val = mappedVals.get(id);\n      } else {\n        d.properties.val = -100;\n      }\n    });\n\n    let stops = [[minMax[0], '#fff'], [minMax[1], '#c41230']];\n    if ($signalType === 'direction') {\n      stops = [[-1, '#224477'], [0, '#fff'], [1, '#c41230']];\n    }\n\n    map.getSource($currentLevel).setData(dat);\n    map.getStyle().layers.find(d => d.id === $currentLevel) ? map.removeLayer($currentLevel) : '';\n    map.addLayer({\n      id: $currentLevel,\n      source: $currentLevel,\n      type: 'fill',\n      filter: ['!=', 'val', -100],\n      paint: {\n        'fill-outline-color': 'black',\n        'fill-color': {\n          property: 'val',\n          stops: stops,\n        },\n      },\n    });\n\n    map.on('click', $currentLevel, function(e) {\n      currentRegion.set(e.features[0].properties.id);\n      new mapboxgl.Popup()\n        .setLngLat(e.lngLat)\n        .setHTML(e.features[0].properties.NAME + '<br />' + e.features[0].properties.val)\n        .addTo(map);\n    });\n  }\n\n  function initializeMap() {\n    map = new mapboxgl.Map({\n      attributionControl: false,\n      container,\n      style: './maps/mapbox_albers_usa_style.json',\n      center: [LON, LAT],\n      zoom: ZOOM,\n      minZoom: ZOOM,\n    })\n      .addControl(new mapboxgl.AttributionControl({ compact: true }))\n      .addControl(new mapboxgl.NavigationControl({ showCompass: false }), 'top-right');\n\n    //Disable touch zoom, it makes gesture scrolling difficult\n    map.scrollZoom.disable();\n\n    map.on('load', function() {\n      map.addSource('county-outline', {\n        type: 'geojson',\n        data: $geojsons.get('county'),\n      });\n      map.addSource('state-outline', {\n        type: 'geojson',\n        data: $geojsons.get('state'),\n      });\n      map.addLayer({\n        id: 'county-outline',\n        source: 'county-outline',\n        type: 'fill',\n        paint: {\n          'fill-color': '#f9f9f9',\n          'fill-outline-color': '#e0e0e0',\n        },\n      });\n      map.addLayer({\n        id: 'state-outline',\n        source: 'state-outline',\n        type: 'fill',\n        paint: {\n          'fill-color': 'rgba(0, 0, 0, 0)',\n          'fill-outline-color': '#bcbcbc',\n        },\n      });\n\n      Object.keys($levels).forEach(name => {\n        let data = $geojsons.get(name);\n        map.addSource(name, {\n          type: 'geojson',\n          data: data,\n        });\n      });\n\n      mounted = true;\n      updateMap();\n    });\n  }\n\n  function zoomBack() {}\n</script>\n\n<style>\n  .map-container {\n    width: 100%;\n    height: 100vh;\n    position: relative;\n  }\n\n  .state-buttons-holder {\n    position: absolute;\n    top: 92px;\n    right: 9px;\n    z-index: 100;\n  }\n\n  .state-buttons-holder button:focus {\n    outline: none;\n  }\n\n  .state-buttons-holder .pg-button {\n    font-size: 23px;\n    position: relative;\n    width: 29px;\n    height: 29px;\n    color: #3a3a3a;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n    padding: 0;\n    box-sizing: content-box;\n    background-color: white;\n    border: 1px solid #d5d5d5;\n    border-radius: 4px;\n    text-align: center;\n    font-family: 'FranklinITCProBold', Helvetica, Arial, sans-serif;\n    line-height: 16px;\n    cursor: pointer;\n    text-decoration: none;\n    user-select: none;\n    transition-delay: 0s;\n    transition-duration: 0.15s;\n    transition-property: background-color;\n    transition-timing-function: ease-in-out;\n  }\n\n  .state-buttons-holder .pg-button:hover {\n    background-color: rgb(213, 213, 213);\n  }\n\n  .state-buttons-holder .pg-button img {\n    width: 90%;\n    /* height: 100%; */\n  }\n</style>\n\n<div bind:this={container} class=\"map-container\">\n  <div class=\"state-buttons-holder\">\n    <button\n      data-state=\"us48\"\n      id=\"bounds-button\"\n      class=\"pg-button bounds-button\"\n      on:click={_ => map.easeTo({ center: [LON, LAT], zoom: ZOOM })}>\n      <img src=\"./assets/imgs/us48.png\" alt=\"\" />\n    </button>\n  </div>\n</div>\n",
    "<script>\n  import { data, sensors, currentSensor, levels, currentLevel, signalType } from './stores.js';\n\n  let hide = false;\n\n  function toggleHide() {\n    hide = !hide;\n  }\n\n  currentSensor.subscribe(sens =>\n    data ? '' : $data[sens][$currentLevel] ? '' : currentLevel.set($sensors.find(d => d.id === sens).levels[0]),\n  );\n</script>\n\n<style>\n  .options {\n    width: 100%;\n    position: relative;\n  }\n\n  .toggle-button {\n    width: 28px;\n    height: 28px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    cursor: pointer;\n    background-color: transparent;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .toggle-button:hover {\n    background-color: rgb(228, 228, 228);\n  }\n\n  .toggle-button.float {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  .toggle-button-icon {\n    width: 24px;\n    height: 24px;\n  }\n\n  .option {\n    width: 100%;\n  }\n\n  .buttons-group-title {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 5px;\n\n    font-weight: 600;\n    font-size: 1.1rem;\n  }\n\n  .buttons-group {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .buttons-group .button {\n    width: 100%;\n    margin: 0;\n    font-size: 0.95rem;\n    line-height: 1rem;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-top-color: transparent;\n    border-width: 1px;\n    color: #363636;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n  }\n\n  .buttons-group-side {\n    width: 100%;\n    display: flex;\n    align-items: stretch;\n    justify-content: stretch;\n  }\n\n  .buttons-group-side .button {\n    /* width: 50%; */\n    flex-grow: 1;\n    margin: 0;\n    font-size: 0.95rem;\n    line-height: 1rem;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-left-color: transparent;\n    border-width: 1px;\n    color: #363636;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n  }\n\n  .buttons-group .button:first-child {\n    border-top-color: #dbdbdb;\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n  }\n\n  .buttons-group .button:last-child {\n    border-bottom-left-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n\n  .buttons-group-side .button:first-child {\n    border-left-color: #dbdbdb;\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .buttons-group-side .button:last-child {\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n\n  .buttons-group .button.selected,\n  .buttons-group-side .button.selected {\n    background-color: var(--red-alpha);\n    border-color: transparent;\n    color: #fff;\n  }\n\n  .buttons-group .button:focus,\n  .buttons-group .button:active,\n  .buttons-group-side .button:focus,\n  .buttons-group-side .button:active {\n    box-shadow: none !important;\n    outline: none;\n  }\n</style>\n\n<div class=\"options\">\n  {#if hide}\n    <div class=\"toggle-button\" on:click={toggleHide}>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/layers-24px.svg\" alt=\"\" />\n    </div>\n  {:else}\n    <div class=\"toggle-button float\" on:click={toggleHide}>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/layers_clear-24px.svg\" alt=\"\" />\n    </div>\n    <br />\n\n    <!-- <div class=\"option\">\n      <div class=\"buttons-group-title\">Data Source</div>\n      <div class=\"buttons-group\">\n        {#each $sensors as sensor}\n          <button\n            class=\"button {$currentSensor === sensor.id ? 'selected' : null}\"\n            on:click={() => currentSensor.set(sensor.id)}>\n            {sensor.name}\n          </button>\n        {/each}\n      </div>\n    </div> -->\n\n    <br />\n\n    <div class=\"option\">\n      <div class=\"buttons-group-title\">Geographic Level</div>\n      <div class=\"buttons-group\">\n        {#each $sensors.find(d => d.id === $currentSensor).levels as level}\n          <button class=\"button {$currentLevel === level ? 'selected' : null}\" on:click={() => currentLevel.set(level)}>\n            {$levels[level]}\n          </button>\n        {/each}\n      </div>\n    </div>\n\n    <br />\n\n    <div class=\"option\">\n      <!-- <div class=\"buttons-group-title\">Signal Type</div> -->\n      <div class=\"buttons-group-side\">\n        <button\n          class=\"button {$signalType === 'direction' ? 'selected' : null}\"\n          on:click={() => signalType.set('direction')}>\n          Direction\n        </button>\n        <button class=\"button {$signalType === 'value' ? 'selected' : null}\" on:click={() => signalType.set('value')}>\n          Value\n        </button>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<!-- <div class=\"options\">\n  <form class=\"pure-form\">\n    <div class=\"pure-g\">\n      <div class=\"pure-u-1 pure-u-md-1-2\">\n        <label for=\"sensor\">Select sensor:</label>\n        <select id=\"sensor\" bind:value={$currentSensor}>\n          {#each $sensors as sensor}\n            <option value={sensor.id}>{sensor.name}</option>\n          {/each}\n        </select>\n      </div>\n\n      <div class=\"pure-u-1 pure-u-md-1-2\">\n        <label for=\"level\">Select level:</label>\n        <select id=\"level\" bind:value={$currentLevel}>\n          {#each $sensors.find(d => d.id === $currentSensor).levels as level}\n            <option value={level}>{$levels[level]}</option>\n          {/each}\n        </select>\n      </div>\n    </div>\n  </form>\n</div> -->\n",
    "<script>\n  import { data, sensors, currentSensor, levels, currentLevel, signalType } from './stores.js';\n\n  let hide = false;\n\n  function toggleHide() {\n    hide = !hide;\n  }\n\n  currentSensor.subscribe(sens =>\n    data ? '' : $data[sens][$currentLevel] ? '' : currentLevel.set($sensors.find(d => d.id === sens).levels[0]),\n  );\n</script>\n\n<style>\n  .options {\n    width: 100%;\n    position: relative;\n  }\n\n  .option {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .buttons-group-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 15px;\n\n    font-weight: 600;\n    font-size: 1.1rem;\n    line-height: 1.1rem;\n  }\n\n  .buttons-group-side {\n    display: flex;\n    align-items: stretch;\n    /* justify-content: center; */\n    /* flex-wrap: wrap; */\n  }\n\n  .buttons-group-side .button {\n    margin: 0;\n    font-size: 0.95rem;\n    line-height: 1rem;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-left-color: transparent;\n    border-width: 1px;\n    color: #363636;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n  }\n\n  .buttons-group-side .button:first-child {\n    border-left-color: #dbdbdb;\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n\n  .buttons-group-side .button:last-child {\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n  }\n\n  .buttons-group-side .button.selected {\n    background-color: var(--red-alpha);\n    border-color: transparent;\n    color: #fff;\n  }\n\n  .buttons-group-side .button:focus,\n  .buttons-group-side .button:active {\n    box-shadow: none !important;\n    outline: none;\n  }\n</style>\n\n<div class=\"options\">\n  <div class=\"option\">\n    <div class=\"buttons-group-title\">Data Source</div>\n    <div class=\"buttons-group-side\">\n      {#each $sensors as sensor}\n        <button\n          class=\"button {$currentSensor === sensor.id ? 'selected' : null}\"\n          on:click={() => currentSensor.set(sensor.id)}>\n          {sensor.name}\n        </button>\n      {/each}\n    </div>\n  </div>\n\n</div>\n"
  ],
  "names": [],
  "mappings": "AA4GE,kBAAkB,8BAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,UAAU,CAEtB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,AAI9B,CAAC,AAED,eAAe,8BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,CACV,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAGb,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,UAAU,CAEtB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CAEnB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,AAI9B,CAAC,AAED,iBAAiB,8BAAC,CAAC,AACjB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CACzB,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,WAAW,CACpB,eAAe,CAAE,aAAa,CAE9B,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,AAC9B,CAAC,AAED,gBAAgB,8BAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,UAAU,CAEtB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,AAC9B,CAAC,AAED,eAAe,8BAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CACvB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,UAAU,CAAE,UAAU,CACtB,KAAK,CAAE,KAAK,CAEZ,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,AAC9B,CAAC,AAED,gDAAkB,MAAM,CACxB,6CAAe,MAAM,CACrB,8CAAgB,MAAM,AAAC,CAAC,AACtB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,IAAI,CAClB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AAED,gCAAiB,CAAC,CAAC,eAAC,CAAC,AACnB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,WAAW,8BAAC,CAAC,AACX,UAAU,CAAE,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CACpD,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,AACd,CAAC,AAED,IAAI,8BAAC,CAAC,AACJ,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AACD,MAAM,8BAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,AACxB,CAAC,AACD,IAAI,8BAAC,CAAC,AACJ,gBAAgB,CAAE,OAAO,AAC3B,CAAC;ACtED,cAAc,8BAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,qBAAqB,8BAAC,CAAC,AACrB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,GAAG,AACd,CAAC,AAED,oCAAqB,CAAC,qBAAM,MAAM,AAAC,CAAC,AAClC,OAAO,CAAE,IAAI,AACf,CAAC,AAED,oCAAqB,CAAC,UAAU,eAAC,CAAC,AAChC,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACxC,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,WAAW,CACvB,gBAAgB,CAAE,KAAK,CACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAC/D,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,EAAE,CACpB,mBAAmB,CAAE,KAAK,CAC1B,mBAAmB,CAAE,gBAAgB,CACrC,0BAA0B,CAAE,WAAW,AACzC,CAAC,AAED,oCAAqB,CAAC,yBAAU,MAAM,AAAC,CAAC,AACtC,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AAED,oCAAqB,CAAC,UAAU,CAAC,GAAG,eAAC,CAAC,AACpC,KAAK,CAAE,GAAG,AAEZ,CAAC;ACjMD,QAAQ,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,cAAc,8BAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,WAAW,CAE7B,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,OAAO,AAC9B,CAAC,AAED,4CAAc,MAAM,AAAC,CAAC,AACpB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC,AAED,cAAc,MAAM,8BAAC,CAAC,AACpB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,AACT,CAAC,AAED,mBAAmB,8BAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,IAAI,AACb,CAAC,AAED,oBAAoB,8BAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,GAAG,CAElB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,AACnB,CAAC,AAED,cAAc,8BAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,6BAAc,CAAC,OAAO,eAAC,CAAC,AACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,IAAI,CACtB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,gBAAgB,CAAE,WAAW,CAC7B,YAAY,CAAE,GAAG,CACjB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,CACf,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACjC,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,UAAU,CAAE,MAAM,AAEpB,CAAC,AAED,mBAAmB,8BAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,OAAO,CACpB,eAAe,CAAE,OAAO,AAC1B,CAAC,AAED,kCAAmB,CAAC,OAAO,eAAC,CAAC,AAE3B,SAAS,CAAE,CAAC,CACZ,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,IAAI,CACtB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,iBAAiB,CAAE,WAAW,CAC9B,YAAY,CAAE,GAAG,CACjB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,CACf,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACjC,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,UAAU,CAAE,MAAM,AAEpB,CAAC,AAED,6BAAc,CAAC,sBAAO,YAAY,AAAC,CAAC,AAClC,gBAAgB,CAAE,OAAO,CACzB,sBAAsB,CAAE,GAAG,CAC3B,uBAAuB,CAAE,GAAG,AAC9B,CAAC,AAED,6BAAc,CAAC,sBAAO,WAAW,AAAC,CAAC,AACjC,yBAAyB,CAAE,GAAG,CAC9B,0BAA0B,CAAE,GAAG,AACjC,CAAC,AAED,kCAAmB,CAAC,sBAAO,YAAY,AAAC,CAAC,AACvC,iBAAiB,CAAE,OAAO,CAC1B,sBAAsB,CAAE,GAAG,CAC3B,yBAAyB,CAAE,GAAG,AAChC,CAAC,AAED,kCAAmB,CAAC,sBAAO,WAAW,AAAC,CAAC,AACtC,uBAAuB,CAAE,GAAG,CAC5B,0BAA0B,CAAE,GAAG,AACjC,CAAC,AAED,6BAAc,CAAC,OAAO,wBAAS,CAC/B,kCAAmB,CAAC,OAAO,SAAS,eAAC,CAAC,AACpC,gBAAgB,CAAE,IAAI,WAAW,CAAC,CAClC,YAAY,CAAE,WAAW,CACzB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,6BAAc,CAAC,sBAAO,MAAM,CAC5B,6BAAc,CAAC,sBAAO,OAAO,CAC7B,kCAAmB,CAAC,sBAAO,MAAM,CACjC,kCAAmB,CAAC,sBAAO,OAAO,AAAC,CAAC,AAClC,UAAU,CAAE,IAAI,CAAC,UAAU,CAC3B,OAAO,CAAE,IAAI,AACf,CAAC;AC3ID,QAAQ,8BAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,oBAAoB,8BAAC,CAAC,AACpB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,IAAI,CAElB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,mBAAmB,8BAAC,CAAC,AACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,OAAO,AAGtB,CAAC,AAED,kCAAmB,CAAC,OAAO,eAAC,CAAC,AAC3B,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,IAAI,CACjB,gBAAgB,CAAE,IAAI,CACtB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,iBAAiB,CAAE,WAAW,CAC9B,YAAY,CAAE,GAAG,CACjB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,CACf,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACjC,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,UAAU,CAAE,MAAM,AAEpB,CAAC,AAED,kCAAmB,CAAC,sBAAO,YAAY,AAAC,CAAC,AACvC,iBAAiB,CAAE,OAAO,CAC1B,sBAAsB,CAAE,GAAG,CAC3B,yBAAyB,CAAE,GAAG,AAChC,CAAC,AAED,kCAAmB,CAAC,sBAAO,WAAW,AAAC,CAAC,AACtC,uBAAuB,CAAE,GAAG,CAC5B,0BAA0B,CAAE,GAAG,AACjC,CAAC,AAED,kCAAmB,CAAC,OAAO,SAAS,eAAC,CAAC,AACpC,gBAAgB,CAAE,IAAI,WAAW,CAAC,CAClC,YAAY,CAAE,WAAW,CACzB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,kCAAmB,CAAC,sBAAO,MAAM,CACjC,kCAAmB,CAAC,sBAAO,OAAO,AAAC,CAAC,AAClC,UAAU,CAAE,IAAI,CAAC,UAAU,CAC3B,OAAO,CAAE,IAAI,AACf,CAAC"
}