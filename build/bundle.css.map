{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Graph.svelte",
    "../../Legend.svelte",
    "../../MapBox.svelte",
    "../../Options.svelte",
    "../../Tabs.svelte",
    "../../Time.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte';\n  import { calculateValFromRectified } from './util.js';\n  import * as d3 from 'd3';\n\n  import Options from './Options.svelte';\n  import Tabs from './Tabs.svelte';\n  import Time from './Time.svelte';\n  import Legend from './Legend.svelte';\n  import MapBox from './MapBox.svelte';\n  import Graph from './Graph.svelte';\n\n  import {\n    sensors,\n    sensorMap,\n    times,\n    stats,\n    signalType,\n    currentRange,\n    currentSensor,\n    currentDate,\n    currentLevel,\n    currentRegion,\n    currentRegionName,\n    regionSliceCache,\n    timeSliceCache,\n    currentData,\n    regionData,\n    mounted,\n    mapFirstLoaded,\n    yesterday,\n    customDataView,\n  } from './stores.js';\n\n  const ENDPOINT = 'https://api.covidcast.cmu.edu/epidata/api.php?source=covidcast&cached=true&time_type=day';\n  const ENDPOINT_META = 'https://api.covidcast.cmu.edu/epidata/api.php?source=covidcast_meta&cached=true';\n\n  // https://stackoverflow.com/a/21712356\n  let isIE = window.document.documentMode;\n  let error = null;\n  let graphShowStatus = false;\n  let changingSensor = false;\n  let levelChangedWhenSensorChanged = false;\n  let dateChangedWhenSensorChanged = false;\n\n  function callAPI(id, signal, level, date, region) {\n    return fetch(\n      ENDPOINT +\n        '&data_source=' +\n        id +\n        '&signal=' +\n        signal +\n        '&geo_type=' +\n        level +\n        '&time_values=' +\n        date +\n        '&geo_value=' +\n        region,\n    ).then(d => d.json());\n  }\n\n  function updateRegionSliceCache(sensor, level, date, reason = 'unspecified') {\n    let sEntry = $sensorMap.get(sensor);\n    if (!$mounted || !sEntry.levels.includes(level) || date > $times.get(sensor)[1] || reason === 'level change')\n      return;\n\n    let cacheEntry = $regionSliceCache.get(sensor + level + date);\n    if (!cacheEntry) {\n      callAPI(sEntry.id, sEntry.signal, level, date, '*').then(d => {\n        if (d.result < 0 || d.message.includes('no results')) {\n          currentData.set([]);\n          regionSliceCache.update(m => m.set(sensor + level + date, []));\n        } else {\n          currentData.set(d.epidata);\n          regionSliceCache.update(m => m.set(sensor + level + date, d.epidata));\n        }\n      });\n    } else {\n      currentData.set(cacheEntry);\n    }\n  }\n\n  function updateTimeSliceCache(sensor, level, region) {\n    let sEntry = $sensorMap.get(sensor);\n    if (!$mounted) return;\n    if (!region) {\n      regionData.set([]);\n      return;\n    }\n\n    // check if the currentRegion has data on the current date\n    const checkIfCurrentRegionHasDataOnCurrentDate = (region_data = []) => {\n      let flag = false;\n      region_data.forEach(item => {\n        if (item.time_value == $currentDate) {\n          flag = true;\n        }\n      });\n      return flag;\n    };\n\n    let cacheEntry = $timeSliceCache.get(sensor + level + region);\n    if (!cacheEntry) {\n      callAPI(sEntry.id, sEntry.signal, level, '20100101-20500101', region).then(d => {\n        regionData.set(d.epidata);\n        timeSliceCache.update(m => m.set(sensor + level + region, d.epidata));\n        if (!checkIfCurrentRegionHasDataOnCurrentDate(d.epidata)) {\n          currentRegion.set('');\n          currentRegionName.set('');\n        }\n      });\n    } else {\n      regionData.set(cacheEntry);\n      if (!checkIfCurrentRegionHasDataOnCurrentDate(cacheEntry)) {\n        currentRegion.set('');\n        currentRegionName.set('');\n      }\n    }\n  }\n\n  currentSensor.subscribe(s => {\n    if (!$mounted) return;\n\n    let l = $currentLevel;\n    let minDate = $times.get(s)[0],\n      maxDate = $times.get(s)[1];\n    let date = minDate;\n    if ($currentDate >= minDate && $currentDate <= maxDate) {\n      date = $currentDate;\n    } else if ($currentDate > maxDate) {\n      date = maxDate;\n    }\n\n    if (!$sensorMap.get(s).levels.includes($currentLevel)) {\n      l = $sensorMap.get(s).levels[0];\n      levelChangedWhenSensorChanged = true;\n      currentRegion.set('');\n      currentRegionName.set('');\n      currentLevel.set(l);\n    } else {\n      updateTimeSliceCache(s, l, $currentRegion);\n    }\n    if (date !== $currentDate) {\n      dateChangedWhenSensorChanged = true;\n      currentDate.set(date);\n    }\n\n    updateRegionSliceCache(s, l, date, 'sensor-change');\n  });\n\n  currentLevel.subscribe(l => {\n    if (levelChangedWhenSensorChanged) {\n      levelChangedWhenSensorChanged = false;\n    } else {\n      if ($mounted) {\n        currentRegion.set('');\n        currentRegionName.set('');\n      }\n      updateRegionSliceCache($currentSensor, l, $currentDate, 'level-change');\n    }\n  });\n\n  currentDate.subscribe(d => {\n    dateChangedWhenSensorChanged\n      ? (dateChangedWhenSensorChanged = false)\n      : updateRegionSliceCache($currentSensor, $currentLevel, d, 'date-change');\n  });\n\n  currentRegion.subscribe(r => {\n    updateTimeSliceCache($currentSensor, $currentLevel, r);\n    r ? toggleGraphShowStatus(null, true) : toggleGraphShowStatus(null, false);\n  });\n\n  onMount(_ => {\n    fetch(ENDPOINT_META)\n      .then(d => d.json())\n      .then(meta => {\n        let timeMap = new Map();\n        let statsMap = new Map();\n\n        Array.from($sensorMap.keys()).forEach(sensorKey => {\n          let sEntry = $sensorMap.get(sensorKey);\n\n          let matchedMeta = meta.epidata.find(\n            d => d.data_source === sEntry.id && d.signal === sEntry.signal && d.time_type === 'day',\n          );\n\n          if (matchedMeta) {\n            if (matchedMeta.max_time > yesterday) {\n              matchedMeta.max_time = yesterday;\n            }\n            timeMap.set(sensorKey, [matchedMeta.min_time, matchedMeta.max_time]);\n            statsMap.set(sensorKey, {\n              mean: matchedMeta.mean_value,\n              std: matchedMeta.stdev_value,\n            });\n          } else {\n            // If no metadata, use information from sensors.\n            timeMap.set(sensorKey, [sEntry.minTime, sEntry.maxTime]);\n            statsMap.set(sensorKey, {\n              mean: sEntry.mean,\n              std: sEntry.std,\n            });\n          }\n        });\n\n        stats.set(statsMap);\n        times.set(timeMap);\n\n        let l = $currentLevel;\n        if (!$sensorMap.get($currentSensor).levels.includes($currentLevel)) {\n          l = $sensorMap.get($currentSensor).levels[0];\n          currentLevel.set(l);\n        }\n\n        let date = $currentDate;\n        if (date === 20100420) {\n          date = timeMap.get($currentSensor)[1];\n          currentDate.set(date);\n        }\n\n        mounted.set(1);\n        updateRegionSliceCache($currentSensor, l, date);\n        if ($currentRegion) {\n          updateTimeSliceCache($currentSensor, $currentLevel, $currentRegion);\n        }\n      });\n  });\n\n  function toggleGraphShowStatus(event, to = null) {\n    if (to !== null) {\n      graphShowStatus = to;\n    } else {\n      graphShowStatus = !graphShowStatus;\n    }\n  }\n\n  function updateURIParameters(sensor, level, region, date, signalType) {\n    let pre = '';\n    if ($customDataView) {\n      const queryString = window.location.search;\n      const urlParams = new URLSearchParams(queryString);\n      pre = 'sensors=' + urlParams.get('sensors') + '&';\n    }\n    window.history.replaceState(\n      {},\n      document.title,\n      '?' +\n        pre +\n        'sensor=' +\n        sensor +\n        '&level=' +\n        level +\n        '&region=' +\n        region +\n        '&date=' +\n        date +\n        '&signalType=' +\n        signalType,\n    );\n  }\n  // Keep the URL updated with the current state\n  currentSensor.subscribe(s => updateURIParameters(s, $currentLevel, $currentRegion, $currentDate, $signalType));\n  currentLevel.subscribe(l => updateURIParameters($currentSensor, l, $currentRegion, $currentDate, $signalType));\n  currentRegion.subscribe(r => updateURIParameters($currentSensor, $currentLevel, r, $currentDate, $signalType));\n  currentDate.subscribe(d => updateURIParameters($currentSensor, $currentLevel, $currentRegion, d, $signalType));\n  signalType.subscribe(t => updateURIParameters($currentSensor, $currentLevel, $currentRegion, $currentDate, t));\n</script>\n\n<style>\n  .options-container {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    max-width: 210px;\n    z-index: 1000;\n    background-color: rgba(255, 255, 255, 0.9);\n    padding: 10px 10px;\n    box-sizing: border-box;\n    transition: all 0.1s ease-in;\n  }\n\n  .tabs-container {\n    position: absolute;\n    top: 10px;\n    left: 220px;\n    right: 220px;\n    z-index: 1000;\n    box-sizing: border-box;\n    transition: all 0.1s ease-in;\n    pointer-events: none;\n  }\n\n  .legend-container {\n    position: absolute;\n    top: 204px;\n    left: 10px;\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.1s ease-in;\n    height: 40%;\n  }\n\n  .graph-container {\n    position: absolute;\n    z-index: 1001;\n    bottom: 10px;\n    right: 10px;\n    background-color: rgba(255, 255, 255, 0.9);\n    padding: 5px 5px;\n    box-sizing: border-box;\n    transition: opacity 0.3s ease-in-out;\n    visibility: hidden;\n    opacity: 0;\n  }\n\n  .graph-container.show {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  .hide-graph-button-anchor {\n    position: relative;\n  }\n\n  .hide-graph-button {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 14px;\n    height: 14px;\n    color: #333;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n    transition: opacity 0.1s ease-in;\n    opacity: 0.7;\n  }\n\n  .hide-graph-button:hover {\n    opacity: 1;\n  }\n\n  .graph-toggole-button-container {\n    position: absolute;\n    z-index: 1001;\n    bottom: 10px;\n    right: 10px;\n    background-color: rgba(255, 255, 255, 0.9);\n    padding: 5px 5px;\n    box-sizing: border-box;\n  }\n\n  .graph-toggle-button {\n    width: 30px;\n    height: 30px;\n    cursor: pointer;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n    transition: all 0.1s ease-in;\n    position: relative;\n  }\n\n  .graph-toggle-button:hover {\n    background-color: #eee;\n  }\n\n  img.toggle-button-icon {\n    width: 24px;\n    height: 24px;\n    background: transparent;\n  }\n\n  button.graph-toggle-button .button-tooltip {\n    visibility: hidden;\n    width: 120px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #666;\n    background-color: #fff;\n    color: #333;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 14px;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 5px;\n    position: absolute;\n    z-index: 1;\n    top: 0px;\n    right: 120%;\n  }\n\n  button.graph-toggle-button .button-tooltip::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent #666;\n  }\n\n  button.graph-toggle-button:hover .button-tooltip {\n    visibility: visible;\n  }\n\n  .time-container {\n    position: absolute;\n    bottom: 10px;\n    left: 10px;\n    z-index: 1002;\n    background-color: rgba(255, 255, 255, 0.9);\n    padding: 30px 10px;\n    box-sizing: border-box;\n    transition: all 0.1s ease-in;\n  }\n\n  .error-message-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: gray;\n  }\n</style>\n\n{#if error}\n  <div class=\"error-message-container\">Failed to load data. Please try again later...</div>\n{/if}\n\n<MapBox />\n\n<div class=\"tabs-container\">\n  <Tabs {isIE} />\n</div>\n\n<div class=\"options-container\">\n  <Options {isIE} />\n</div>\n\n<div class=\"legend-container\">\n  <Legend />\n</div>\n\n<div class=\"time-container\">\n  <Time />\n</div>\n\n<!-- need to add the $mapFirstLoaded check -->\n{#if $mapFirstLoaded && !graphShowStatus}\n  <div class=\"graph-toggole-button-container\">\n    <button\n      title={isIE !== undefined ? 'Show time series' : ''}\n      class=\"graph-toggle-button\"\n      aria-label=\"show time series\"\n      on:click={event => toggleGraphShowStatus(false)}>\n      <span class=\"button-tooltip\">Show time series</span>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/line-graph-icon.png\" alt=\"\" />\n    </button>\n  </div>\n{/if}\n\n<!-- need to add the $mapFirstLoaded check -->\n<div class=\"graph-container {$mapFirstLoaded && graphShowStatus ? 'show' : ''}\">\n  <div class=\"hide-graph-button-anchor\">\n    <button\n      title=\"Hide time series\"\n      aria-label=\"Hide time series\"\n      on:click={toggleGraphShowStatus}\n      class=\"hide-graph-button\">\n      &#10005;\n    </button>\n  </div>\n\n  <Graph />\n</div>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import {\n    currentRegion,\n    currentRegionName,\n    currentSensor,\n    currentLevel,\n    currentData,\n    regionData,\n    currentSensorName,\n    currentLevelName,\n    currentDate,\n    times,\n    stats,\n    sensors,\n    sensorMap,\n    signalType,\n    timeRangeOnSlider,\n    yesterday,\n  } from './stores.js';\n  import { calculateValFromRectified } from './util.js';\n  import { DIRECTION_THEME } from './theme.js';\n  import * as d3 from 'd3';\n  import d3Tip from 'd3-tip';\n\n  let el;\n  let w;\n  let t;\n\n  // local variables for permissible graph types\n  const barChart = 'Bar_Chart';\n  const lineGraph = 'Line_Graph';\n  const charts = [barChart, lineGraph];\n  let userCharts = [];\n  let currentChart = 0;\n\n  onMount(_ => {\n    drawGraph();\n    regionData.subscribe(d => updateGraph(d));\n    currentDate.subscribe(_ => updateGraphTimeRange());\n    signalType.subscribe(_ => updateGraph($regionData));\n    currentRegion.subscribe(region => {\n      if (!region) {\n        userCharts[currentChart].setData([]);\n        userCharts[currentChart].draw();\n      }\n    });\n    currentSensor.subscribe(_ => {\n      if (userCharts != undefined) {\n        if (userCharts[currentChart].isChart()) {\n          userCharts[currentChart].getChartTitle();\n        } else {\n          let chart = new Chart();\n          chart.getChartTitle();\n          chart.draw();\n          userCharts.push(chart);\n          currentChart += 1;\n        }\n      }\n    });\n    timeRangeOnSlider.subscribe(({ min, max }) => {\n      if (userCharts != undefined) {\n        setChartDomain(min, max);\n        userCharts[currentChart].draw();\n      }\n    });\n  });\n\n  function drawGraph() {\n    let chart = new Chart();\n    chart.draw();\n    userCharts.push(chart);\n  }\n\n  function updateGraph(data) {\n    try {\n      if (data.length !== 0 && $currentRegion) {\n        if (userCharts != undefined) {\n          if (userCharts[currentChart].isChart()) {\n            userCharts[currentChart].draw();\n          } else {\n            var dataResults = transferData(data);\n            var graphType = dataResults[0];\n            var graphData = dataResults[1];\n            var range = dataResults[2];\n            var n = dataResults[3];\n            var domain = dataResults[4];\n            userCharts[currentChart] = new Chart(graphType, graphData, range, n, domain);\n            userCharts[currentChart].draw();\n          }\n        }\n      }\n    } catch (err) {}\n  }\n\n  function updateGraphTimeRange() {\n    if (userCharts[currentChart]) {\n      userCharts[currentChart].draw();\n    }\n  }\n\n  // transfer data to new graph\n  function transferData(clickedData) {\n    let data = clickedData;\n    var dataRange = userCharts[currentChart].getRange();\n    var n = userCharts[currentChart].getN();\n    var domain = userCharts[currentChart].getDomain();\n    var cType = lineGraph;\n    return [cType, data, dataRange, n, domain];\n  }\n\n  // function setChartRange(data) {\n  //   try {\n  //     if (data) {\n  //       let { min_value, max_value } = data;\n  //       let { num_locations } = data;\n  //       if (userCharts[currentChart] !== undefined) {\n  //         userCharts[currentChart].setRange(min_value, max_value);\n  //         userCharts[currentChart].setN(num_locations);\n  //       }\n  //     }\n  //   } catch (error) {}\n  // }\n\n  function setChartDomain(min, max) {\n    try {\n      if (userCharts[currentChart] != undefined) {\n        let minDate = min;\n        let maxDate = max;\n        userCharts[currentChart].setDomain(min, max);\n      }\n    } catch (e) {}\n  }\n\n  class Chart {\n    constructor(chartType, data, dataRange, num, domain) {\n      var chart;\n      this.chartType = chartType;\n      this.x = null;\n      this.y = null;\n      switch (chartType) {\n        case 'Bar_Chart':\n          chart = new BarChart();\n          chart.setData(data);\n          break;\n        case 'Line_Graph':\n          chart = new LineGraph();\n          chart.setData(data);\n          chart.setRange(dataRange[0], dataRange[1]);\n          chart.setN(num);\n          chart.setDomain(domain[0], domain[1]);\n          break;\n        default:\n          TypeError('Chart type not a valid type.');\n      }\n      return chart;\n    }\n\n    setData(data) {\n      this.data = data;\n    }\n\n    getData() {\n      return this.data;\n    }\n\n    setN(num) {\n      this.n = num;\n    }\n\n    getN() {\n      if (this.n) {\n        return this.n;\n      }\n    }\n\n    getYAxis() {\n      return $sensorMap.get($currentSensor).yAxis;\n    }\n\n    getFormat() {\n      let format = $sensorMap.get($currentSensor).format;\n      if (format === 'percent') return d => d + '%';\n      else if (format === 'raw') return d3.format('.1f');\n      return d => d;\n    }\n\n    getChartTitle() {\n      t = $sensorMap.get($currentSensor).chartTitleText;\n    }\n\n    isChart() {\n      var result = null;\n      try {\n        this.chartType in charts ? (result = true) : (result = false);\n      } catch (e) {\n        if (e.name == 'ReferenceError') {\n          result = false;\n        }\n      }\n      return result;\n    }\n\n    draw() {\n      // if there is an existing chart, remove it and redraw\n      d3.select(el)\n        .selectAll('*')\n        .remove();\n\n      if (w > 400) w = 400;\n      // size chart\n      var margin = { top: 20, right: 20, bottom: 70, left: 40 },\n        width = w - margin.left - margin.right,\n        height = 0.75 * w - margin.top - margin.bottom;\n\n      // parse the date time\n      var parseDate = d3.timeParse('%Y%m%d');\n\n      // set ranges\n      this.x = d3.scaleBand().rangeRound([0, width]);\n      this.y = d3.scaleLinear().range([height, 0]);\n\n      // attach graphic\n      var svg = d3\n        .select(el)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n      // draw axes\n      svg\n        .append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(this.x).tickFormat(''));\n      svg.append('g').call(d3.axisLeft(this.y).tickFormat(''));\n    }\n\n    setRange(min, max) {\n      this.min = min;\n      this.max = max;\n    }\n\n    getRange() {\n      return [this.min, this.max];\n    }\n\n    setDomain(minDate, maxDate) {\n      this.minDate = minDate;\n      this.maxDate = maxDate;\n    }\n\n    getDomain() {\n      //console.log('get domain: ' + this.minDate);\n      return [this.minDate, this.maxDate];\n    }\n  }\n\n  class BarChart extends Chart {\n    // verify that the supplied data is an array of integers for a single data source\n    verifyDataFormat(data) {\n      super.verifyDataFormat();\n      !Number.isInteger(Object.values(data))\n        ? TypeError('Provided data is of the wrong type. Only integers accepted.')\n        : true;\n      data.length > 1\n        ? RangeError('Bar charts are only valid for single data sources. Comparisons are not supported.')\n        : true;\n      data.length < 1 ? ReferenceError('No data was provided.') : true;\n    }\n\n    draw() {\n      super.draw();\n    }\n  }\n\n  class LineGraph extends Chart {\n    draw() {\n      // test function\n      calculateSD();\n\n      // if there is an existing chart, remove it and redraw\n      d3.select(el)\n        .selectAll('*')\n        .remove();\n\n      // line graph\n      let myData = this.getData();\n\n      // size chart\n      var margin = { top: 15, right: 35, bottom: 70, left: 60 }, // right need to be wide enough to accommodate the tooltip\n        width = w - margin.left - margin.right,\n        height = 0.85 * w - margin.top - margin.bottom;\n\n      d3.select(el).html('');\n      var svg = d3\n        .select(el)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n      // set date range\n      var parseTime = d3.timeParse('%Y%m%d');\n      var domain = this.getDomain();\n      var minDate = parseTime(domain[0]);\n      var maxDate = parseTime(domain[1]);\n      var bisectDate = d3.bisector(function(d) {\n        return d.time_value;\n      }).right;\n      myData = myData.filter(it => parseTime(it['time_value']) <= maxDate);\n      myData = myData.filter(it => parseTime(it['time_value']) >= minDate);\n\n      let currDate = parseTime($currentDate);\n      let currDateSeven = parseTime($currentDate);\n      currDateSeven.setDate(currDate.getDate() - 6);\n\n      // peg values to max and min if out of range\n      let chartMax = this.max;\n      let chartMin = this.min;\n      for (var i = 0; i < myData.length; i++) {\n        let directionDate = parseTime(myData[i].time_value);\n        if (directionDate >= currDateSeven && directionDate <= currDate) {\n          myData[i].inDirection = true;\n        } else {\n          myData[i].inDirection = false;\n        }\n        myData[i].max = false;\n        if (+myData[i].value < this.min) {\n          myData[i].value = this.min;\n        } else if (+myData[i].value > this.max) {\n          myData[i].max = true;\n          if (+myData[i].value > chartMax) chartMax = +myData[i].value;\n        }\n      }\n\n      if (chartMax > 100 && $sensorMap.get($currentSensor).format === 'percent') {\n        chartMax = 100;\n      }\n\n      // console.log(d3.extent(myData, d => parseTime(d.time_value)))\n      // scale x and y axes\n      var x = d3\n        .scaleTime()\n        .domain([d3.extent(myData, d => parseTime(d.time_value))[0], parseTime(yesterday)])\n        .range([0, width]);\n      var y = d3\n        .scaleLinear()\n        .domain([this.min, chartMax])\n        .range([height, 0]);\n\n      var xTicks = myData.length;\n\n      let formatYTicks;\n      let format = $sensorMap.get($currentSensor).format;\n      if (format === 'percent') formatYTicks = d => d + '%';\n      else if (format === 'raw') {\n        formatYTicks = y.domain[1] - y.domain[0] > 10 ? d3.format('.0f') : d3.format('.1f');\n      }\n      var formatXTicks = xTicks < 6 ? d3.timeDay.every(1) : d3.timeDay.every(4);\n\n      // append the axes\n      svg\n        .append('g')\n        .attr('class', 'axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n          d3\n            .axisBottom(x)\n            .tickFormat(d3.timeFormat('%m/%d'))\n            .ticks(7),\n        );\n\n      svg\n        .selectAll('text')\n        .attr('y', 10)\n        .attr('x', -20)\n        .attr('dy', '0em')\n        .attr('transform', 'rotate(-60)');\n\n      svg\n        .append('g')\n        .attr('class', 'axis')\n        .call(d3.axisLeft(y).tickFormat(formatYTicks));\n\n      // draw the line graph\n      let line = d3\n        .line()\n        .x(d => x(parseTime(d.time_value)))\n        .y(d => y(+d.value));\n\n      let area = d3\n        .area()\n        .x(d => x(parseTime(d.time_value)))\n        .y0(d => y(Math.max(0, +d.value - d.stderr)))\n        .y1(d => y(+d.value + d.stderr));\n\n      svg\n        .append('path')\n        .attr('fill', 'none')\n        .attr('stroke', '#767676') // DIRECTION_THEME.gradientMiddle)\n        .attr('stroke-width', 3)\n        .attr('d', line(myData));\n\n      svg\n        .append('path')\n        .attr('fill', 'rgba(0, 0, 0, 0.1')\n        .attr('d', area(myData));\n\n      // define tool tip\n      let tip = d3Tip()\n        .attr('class', 'd3-tip')\n        .offset([-10, 0])\n        .html(function(d) {\n          return (\n            d3.timeFormat('%m/%d')(parseTime(d.time_value)) +\n            ': ' +\n            d.value.toFixed(2) +\n            ($sensorMap.get($currentSensor).format === 'percent' ? '%' : '') +\n            (d.stderr ? ' ± ' + d.stderr.toFixed(2) : '')\n          );\n        });\n\n      svg.call(tip);\n\n      svg\n        .selectAll('circle')\n        .data(myData)\n        .enter()\n        .append('circle')\n        .attr('r', d => (d.time_value == $currentDate ? 6 : 4))\n        .attr('cx', d => x(parseTime(d.time_value)))\n        .attr('cy', d => y(+d.value))\n        .attr('id', d => d.time_value)\n        .style('stroke-width', d => (d.time_value == $currentDate ? 1 : 1))\n        .style('fill', d => {\n          let color = '#767676';\n          if (d.inDirection && $signalType === 'direction') {\n            switch (d.direction) {\n              case 1:\n                color = DIRECTION_THEME.increasing;\n                break;\n              case 0:\n                color = DIRECTION_THEME.steady;\n                break;\n              case -1:\n                color = DIRECTION_THEME.decreasing;\n                break;\n              default:\n                color = 'white';\n                break;\n            }\n          } else if (d.time_value == $currentDate && $signalType === 'value') {\n            color = 'white';\n          }\n          return color;\n        })\n        .style('stroke', '#767676')\n        .on('mouseover', tip.show)\n        .on('mouseout', tip.hide)\n        .on('click', d => {\n          tip.hide;\n          d3.selectAll('.d3-tip').remove();\n          currentDate.set(d.time_value);\n        });\n\n      // var colorScale = d3.scaleLinear()\n      //                     .domain([chartMin, chartMax])\n      //                     .range([gradientMin, gradientMiddle, gradientMax])\n      //                     .interpolate(d3.interpolateHcl);\n      // svg.select('#'+$currentDate)\n      //   .enter()\n      //   .style('fill', d => {colorScale(d.value)});\n      // else if(d.time_value == $currentDate && $signalType === 'value') {\n      //             color = colorScale(d.value);\n      //           }\n      // add the data to the graph\n      //d => (d.time_value == $currentDate ? DIRECTION_THEME.gradientMiddle : 'none'))\n\n      //d => (d.time_value == $currentDate ? DIRECTION_THEME.gradientMiddle : 'none'))\n\n      // label the y-axis\n      var label = this.getYAxis();\n      svg\n        .append('text')\n        .attr('class', 'axis-text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '0.75em')\n        .style('text-anchor', 'middle')\n        .text(label);\n\n      // label the x-axis\n      svg\n        .append('text')\n        .attr('class', 'axis-text')\n        .attr('transform', 'translate(' + width / 2 + ', ' + (height + margin.top + 40) + ')')\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n      // label the chart\n      this.getChartTitle();\n      var chartTitle = this.getChartTitle();\n      svg\n        .append('text')\n        .attr('class', 'graph-title')\n        .attr('transform', 'translate(' + width / 2 + ', ' + 0 + ')')\n        .style('text-anchor', 'middle')\n        .text(chartTitle);\n    }\n  }\n\n  // calculate the graph's min and max range based off the dataset's standard deviation\n  function calculateSD() {\n    let sensor = $currentSensor;\n    let sts = $stats.get(sensor);\n    var minMax = [sts.mean - 3 * sts.std, sts.mean + 3 * sts.std];\n    if (minMax[0] < 0) {\n      minMax[0] = 0;\n    }\n    userCharts[currentChart].setRange(minMax[0], minMax[1]);\n  }\n</script>\n\n<style>\n  .graph {\n    max-height: 390px;\n    max-width: 400px;\n  }\n\n  .graph-title {\n    text-align: center;\n    font-size: 14px;\n    margin: 3px 0px !important;\n    padding: 0px 20px 0px 20px !important;\n    font-family: 'Open Sans', sans-serif;\n    color: var(--darkgrey);\n    /* padding-left: 30px !important; */\n  }\n\n  .graph-description {\n    text-align: center;\n    margin: 3px 20px 3px 20px !important;\n    font-size: 14px;\n    padding: 0px !important;\n  }\n\n  .graph-itself {\n    margin: 0px 6px;\n    width: 374px;\n  }\n</style>\n\n<div class=\"graph\">\n  <h5 class=\"graph-title\">{t}</h5>\n  <p class=\"graph-description\">\n    {$currentRegionName && $currentLevel === 'county' && $currentRegion.slice(-3) + '' === '000' ? 'Rest of' : ''}\n    {$currentRegionName}\n    {$currentRegionName && $currentLevel === 'county' && $currentRegion.slice(-3) + '' !== '000' ? 'County' : ''}\n  </p>\n\n  <div bind:clientWidth={w} class=\"graph-itself\">\n    <div bind:this={el} />\n  </div>\n</div>\n",
    "<script>\n  import { signalType, stats, currentSensor, sensorMap } from './stores.js';\n  import { DIRECTION_THEME } from './theme.js';\n  import * as d3 from 'd3';\n\n  let high = '';\n  let low = '';\n\n  currentSensor.subscribe(s => ($stats ? updateLowHigh(s, $stats) : ''));\n  stats.subscribe(s => (s ? updateLowHigh($currentSensor, s) : ''));\n\n  function updateLowHigh(sens, stats) {\n    let sts = stats.get(sens);\n    let valueMinMax = [sts.mean - 3 * sts.std, sts.mean + 3 * sts.std];\n\n    if ($sensorMap.get($currentSensor).format === 'raw') {\n      high = valueMinMax[1].toFixed(2);\n      low = Math.max(0, valueMinMax[0]).toFixed(2);\n    } else {\n      high = Math.min(100, valueMinMax[1]).toFixed(2) + '% ';\n      low = Math.max(0, valueMinMax[0]).toFixed(2) + '% ';\n    }\n  }\n</script>\n\n<style>\n  .legend {\n    font-size: 0.8rem;\n    /* border-radius: 8px; */\n    padding: 10px 10px;\n    box-sizing: border-box;\n    background-color: rgba(255, 255, 255, 0.9);\n    transition: all 0.1s ease-in;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .legend.value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .color {\n    width: 20px;\n    height: 100%;\n    /* border-radius: 50%; */\n    margin-right: 10px;\n    display: inline-block;\n    /* border: 1px solid #dbdbdb; */\n    border-top-style: none;\n    transition: none;\n  }\n\n  .legend p {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    color: rgba(0, 0, 0, 0.7);\n    margin-right: 5px;\n    padding: 0px;\n  }\n\n  .legend-bar {\n    width: 20px;\n    height: 100%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  .direction-p {\n    height: 33%;\n    display: inline-flex;\n    align-items: center;\n  }\n</style>\n\n<div aria-label=\"legend\" class=\"legend {$signalType === 'value' ? 'value' : ''}\">\n  {#if $signalType === 'direction'}\n    <div class=\"direction-p\">\n      <div class=\"color inc\" style=\"background-color: {DIRECTION_THEME.increasing}\" />\n      <p aria-hidden=\"true\" class=\"direction-indicators inc\">\n        {@html DIRECTION_THEME.increasingIcon}\n      </p>\n      <p>Increasing</p>\n    </div>\n    <div class=\"direction-p\">\n      <div class=\"color inc\" style=\"background-color: {DIRECTION_THEME.steady}\" />\n      <p aria-hidden=\"true\" class=\"direction-indicators inc\">\n        {@html DIRECTION_THEME.steadyIcon}\n      </p>\n      <p>Steady</p>\n    </div>\n    <div class=\"direction-p\">\n      <div class=\"color inc\" style=\"background-color: {DIRECTION_THEME.decreasing}\" />\n      <p aria-hidden=\"true\" class=\"direction-indicators inc\">\n        {@html DIRECTION_THEME.decreasingIcon}\n      </p>\n      <p>Decreasing</p>\n    </div>\n  {:else}\n    <p>{high ? high + '+' : ''}</p>\n    <div\n      class=\"legend-bar\"\n      style=\"background: linear-gradient(to top, {DIRECTION_THEME.gradientMin}, {DIRECTION_THEME.gradientMiddle}, {DIRECTION_THEME.gradientMax})\" />\n    <p>{low}</p>\n  {/if}\n</div>\n",
    "<script>\n  import colorParse from 'color-parse';\n  import invertColor from 'invert-color';\n  import mapboxgl from 'mapbox-gl';\n  import { onMount } from 'svelte';\n  import { defaultRegionOnStartup, getTextColorBasedOnBackground } from './util.js';\n  import { DIRECTION_THEME, MAP_THEME } from './theme.js';\n  import {\n    levels,\n    stats,\n    currentRegion,\n    currentRegionName,\n    geojsons,\n    currentSensor,\n    currentLevel,\n    currentDate,\n    currentData,\n    currentRange,\n    signalType,\n    currentDataReadyOnMap,\n    mounted,\n    mapFirstLoaded,\n    sensorMap,\n  } from './stores.js';\n\n  let LAT = -0.5;\n  let LON = -0.5;\n  let ZOOM = 3.9;\n\n  // Boolean tracking if the map has been initialized.\n  let mapMounted = false;\n  let chosenRandom = false;\n  let hoveredId = null;\n  let container;\n  let map;\n  let popup;\n  let megaHoveredId;\n  let clickedId;\n  let megaClickedId;\n\n  onMount(_ => {\n    let containerWidth = container.clientWidth;\n    if (containerWidth <= 1021) {\n      ZOOM = 3.9;\n    } else if (containerWidth > 1021 && containerWidth < 1280) {\n      ZOOM = 4.1;\n    } else if (containerWidth >= 1280) {\n      ZOOM = 4.3;\n    }\n  });\n\n  // Mouse event handlers\n  const onMouseEnter = level => e => {\n    map.getCanvas().style.cursor = 'pointer';\n    popup.setLngLat(e.lngLat).addTo(map);\n  };\n\n  const onMouseMove = level => e => {\n    if (level === 'state-outline') {\n      map.getCanvas().style.cursor = 'pointer';\n      popup\n        .setLngLat(e.lngLat)\n        .setHTML('Estimate unavailable')\n        .addTo(map);\n      return;\n    }\n\n    map.setFeatureState({ source: level, id: hoveredId }, { hover: false });\n    map.setFeatureState({ source: 'mega-county', id: megaHoveredId }, { hover: false });\n\n    if (level === 'mega-county') {\n      if (hoveredId === null) {\n        megaHoveredId = e.features[0].id;\n        map.setFeatureState({ source: level, id: megaHoveredId }, { hover: true });\n      } else {\n        megaHoveredId = null;\n      }\n    } else {\n      hoveredId = e.features[0].id;\n      map.setFeatureState({ source: level, id: hoveredId }, { hover: true });\n    }\n\n    if (hoveredId !== null && level === 'mega-county') return;\n\n    // popup\n    const { value, direction, NAME } = e.features[0].properties;\n    const fillColor = e.features[0].layer.paint['fill-color'].toString();\n    const sens = $sensorMap.get($currentSensor);\n\n    let title =\n      (level === 'mega-county' ? 'Rest of ' : '') +\n      NAME +\n      ($currentLevel === 'county' && level !== 'mega-county' ? ' County' : '');\n\n    let body;\n    if ($signalType === 'value') {\n      body = `\n      <div class=\"map-popup-region-value-container\">\n        ${sens.yAxis}:\n        <span class=\"map-popup-region-value\" \n              style=\"background-color: ${fillColor}; \n                     color: ${getTextColorBasedOnBackground(fillColor)};\">\n          ${value.toFixed(2)}\n          ${sens.format === 'percent' ? '%' : ''}\n        </span>\n      </div>\n      `;\n    } else {\n      let color, icon, text;\n      if (direction === 1) {\n        color = DIRECTION_THEME.increasing;\n        icon = DIRECTION_THEME.increasingIcon;\n        text = 'Increasing';\n      } else if (direction === 0) {\n        color = DIRECTION_THEME.steady;\n        icon = DIRECTION_THEME.steadyIcon;\n        text = 'Steady';\n      } else {\n        color = DIRECTION_THEME.decreasing;\n        icon = DIRECTION_THEME.decreasingIcon;\n        text = 'Decreasing';\n      }\n\n      body = `<div class=\"map-popup-region-value-container\">\n                <span class=\"map-popup-region-value\" \n                      style=\"background-color: ${color};\n                      color: \n                      ${getTextColorBasedOnBackground(color)};\">\n                  ${icon} ${text} \n                </span>\n               </div>`;\n    }\n\n    body =\n      `<div class=\"map-popup-region-name\">\n        ${title}\n      </div>` + body;\n\n    popup\n      .setLngLat(e.lngLat)\n      .setHTML(body)\n      .addTo(map);\n  };\n\n  const onMouseLeave = level => e => {\n    if (level === 'state-outline') {\n      popup.remove();\n      return;\n    }\n    map.setFeatureState({ source: 'mega-county', id: megaHoveredId }, { hover: false });\n    if (level === 'mega-county' && hoveredId !== null) megaHoveredId = null;\n\n    map.setFeatureState({ source: level, id: hoveredId }, { hover: false });\n    if (level !== 'mega-county') hoveredId = null;\n\n    map.getCanvas().style.cursor = '';\n    popup.remove();\n  };\n\n  const onClick = level => e => {\n    if (clickedId) {\n      map.setFeatureState({ source: level, id: clickedId }, { select: false });\n    }\n    if (megaClickedId) {\n      map.setFeatureState({ source: 'mega-county', id: megaClickedId }, { select: false });\n    }\n\n    if (level === 'mega-county') {\n      if (hoveredId !== null) return;\n      if (megaHoveredId === megaClickedId) {\n        megaClickedId = null;\n        currentRegionName.set('');\n        currentRegion.set('');\n        return;\n      }\n      map.setFeatureState({ source: 'county', id: clickedId }, { select: false });\n      clickedId = null;\n      megaClickedId = e.features[0].id;\n      map.setFeatureState({ source: level, id: megaClickedId }, { select: true });\n      currentRegionName.set(e.features[0].properties.NAME);\n      currentRegion.set(e.features[0].properties.STATE + '000');\n    } else {\n      megaClickedId = null;\n      if (clickedId !== e.features[0].id) {\n        clickedId = e.features[0].id;\n        map.setFeatureState({ source: level, id: clickedId }, { select: true });\n        currentRegionName.set(e.features[0].properties.NAME);\n        currentRegion.set(e.features[0].properties.id);\n      } else {\n        clickedId = null;\n        currentRegionName.set('');\n        currentRegion.set('');\n      }\n    }\n  };\n\n  // If it hasn't been initialized and we have geojsons and initial data, create map.\n  $: if (!map && $geojsons.size !== 0 && $stats) {\n    initializeMap();\n  }\n\n  // Update the map when sensor or level changes.\n  currentData.subscribe(_ => updateMap('data'));\n  currentLevel.subscribe(_ => updateMap('data'));\n  signalType.subscribe(_ => updateMap('signal'));\n  mounted.subscribe(_ => updateMap('mounted'));\n  currentDate.subscribe(_ => {\n    if (\n      $currentData.length > 0 &&\n      ($currentData[0].sensor !== $currentSensor || $currentData[0].level !== $currentLevel)\n    ) {\n      return;\n    }\n    updateMap('data');\n  });\n\n  function updateMap(type) {\n    if (!mapMounted) return;\n\n    // Reset all hover/click states.\n    [...Object.keys($levels), 'mega-county'].forEach(level => map && map.removeFeatureState({ source: level }));\n\n    // If we're looking at counties, draw the mega-county states.\n    let drawMega = $currentLevel === 'county';\n\n    // Get the range for the heatmap.\n    let thisStats = $stats.get($currentSensor);\n    let valueMinMax = [thisStats.mean - 3 * thisStats.std, thisStats.mean + 3 * thisStats.std];\n    currentRange.set($signalType === 'value' ? valueMinMax : [-1, 1]);\n\n    let valueMappedVals = new Map();\n    let directionMappedVals = new Map();\n    let valueMappedMega = new Map();\n    let directionMappedMega = new Map();\n\n    // Get the GEO_IDS and value/directions from the API data, including mega counties if necessary.\n    let geoIds = new Set(\n      $currentData.map(d => {\n        const key = d.geo_value.toUpperCase();\n        const megaIndicator = key.slice(-3) + '';\n        const megaKey = key.slice(0, 2) + '';\n\n        if (d.value !== null) {\n          if (drawMega && megaIndicator === '000') {\n            valueMappedMega.set(megaKey, d.value);\n          } else {\n            valueMappedVals.set(key, d.value);\n          }\n        }\n        if (d.direction !== null) {\n          if (drawMega && megaIndicator === '000') {\n            directionMappedMega.set(megaKey, d.direction);\n          } else {\n            directionMappedVals.set(key, d.direction);\n          }\n        }\n        return key;\n      }),\n    );\n\n    let megaDat = $geojsons.get('state');\n    if (drawMega) {\n      megaDat.features.forEach(d => {\n        const id = d.properties.STATE;\n\n        d.properties.value = -100;\n        d.properties.direction = -100;\n        if (geoIds.has(id + '000') && valueMappedMega.get(id) !== undefined) {\n          d.properties.value = valueMappedMega.get(id);\n        }\n        if (geoIds.has(id + '000') && directionMappedMega.get(id) !== undefined) {\n          d.properties.direction = directionMappedMega.get(id);\n        }\n      });\n    }\n\n    let dat = $geojsons.get($currentLevel);\n    dat.features.forEach(d => {\n      const id = d.properties.id;\n\n      d.properties.value = -100;\n      d.properties.direction = -100;\n      if (geoIds.has(id) && valueMappedVals.get(id) !== undefined) {\n        d.properties.value = valueMappedVals.get(id);\n      }\n      if (geoIds.has(id) && directionMappedVals.get(id) !== undefined) {\n        d.properties.direction = directionMappedVals.get(id);\n      }\n    });\n\n    let stops;\n    let stopsMega;\n    if ($signalType === 'value') {\n      let center = valueMinMax[0] + (valueMinMax[1] - valueMinMax[0]) / 2;\n      stops = [\n        [Math.max(0, valueMinMax[0]), DIRECTION_THEME.gradientMin],\n        [center, DIRECTION_THEME.gradientMiddle],\n        [valueMinMax[1], DIRECTION_THEME.gradientMax],\n      ];\n      stopsMega = [\n        [Math.max(0, valueMinMax[0]), DIRECTION_THEME.gradientMinMega],\n        [center, DIRECTION_THEME.gradientMiddleMega],\n        [valueMinMax[1], DIRECTION_THEME.gradientMaxMega],\n      ];\n    } else {\n      stops = [\n        [-100, MAP_THEME.countyFill],\n        [-1, DIRECTION_THEME.decreasing],\n        [0, DIRECTION_THEME.steady],\n        [1, DIRECTION_THEME.increasing],\n      ];\n      stopsMega = [\n        [-100, MAP_THEME.countyFill],\n        [-1, DIRECTION_THEME.gradientMinMega],\n        [0, DIRECTION_THEME.gradientMiddleMega],\n        [1, DIRECTION_THEME.gradientMaxMega],\n      ];\n    }\n\n    if (['data', 'init'].includes(type)) {\n      map.getSource($currentLevel).setData(dat);\n      drawMega ? map.getSource('mega-county').setData(megaDat) : '';\n    }\n\n    Object.keys($levels).forEach(name => {\n      if (name === $currentLevel) {\n        if (map.getLayer(name)) {\n          map.setPaintProperty(name, 'fill-color', {\n            property: $signalType,\n            stops: stops,\n          });\n          map.setLayoutProperty(name, 'visibility', 'visible');\n        }\n      } else {\n        map.getLayer(name) && map.setLayoutProperty(name, 'visibility', 'none');\n      }\n    });\n    if (drawMega) {\n      map.setPaintProperty('mega-county', 'fill-color', {\n        property: $signalType,\n        stops: stopsMega,\n      });\n      map.setLayoutProperty('mega-county', 'visibility', 'visible');\n    } else {\n      map.setLayoutProperty('mega-county', 'visibility', 'none');\n    }\n\n    const viableFeatures = dat.features.filter(f => f.properties[$signalType] !== -100);\n\n    // set a random focus on start up\n    if (chosenRandom === false && $mounted) {\n      if (viableFeatures.length > 0) {\n        const found = viableFeatures.filter(\n          f =>\n            f.properties.id === defaultRegionOnStartup.county ||\n            f.properties.id === defaultRegionOnStartup.msa ||\n            f.properties.id === defaultRegionOnStartup.state,\n        );\n        if (found.length > 0) {\n          // found Allegheny / Pittsburgh\n          const randomFeature = found[0];\n          if ($currentRegion === '') {\n            currentRegionName.set(randomFeature.properties.NAME);\n            currentRegion.set(randomFeature.id);\n            clickedId = randomFeature.id;\n            map.setFeatureState({ source: $currentLevel, id: clickedId }, { select: true });\n          }\n          chosenRandom = true;\n        } else {\n          const index = Math.floor(Math.random() * (viableFeatures.length - 1));\n          const randomFeature = viableFeatures[index];\n          currentRegionName.set(randomFeature.properties.NAME);\n          currentRegion.set(randomFeature.properties.id);\n          clickedId = randomFeature.id;\n          map.setFeatureState({ source: $currentLevel, id: clickedId }, { select: true });\n          chosenRandom = true;\n        }\n      }\n    }\n\n    if ($currentRegion) {\n      const megaFound = megaDat.features.filter(f => f.properties.STATE + '000' === $currentRegion + '');\n      const found = viableFeatures.filter(f => f.properties.id === $currentRegion);\n      if (megaFound.length > 0) {\n        megaClickedId = parseInt(megaFound[0].properties.STATE);\n        currentRegionName.set(megaFound[0].properties.NAME);\n        map.setFeatureState({ source: 'mega-county', id: megaClickedId }, { select: true });\n      }\n      if (found.length > 0) {\n        clickedId = found[0].id;\n        currentRegionName.set(found[0].properties.NAME);\n        map.setFeatureState({ source: $currentLevel, id: clickedId }, { select: true });\n      }\n    }\n  }\n\n  function initializeMap() {\n    map = new mapboxgl.Map({\n      attributionControl: false,\n      container,\n      style: './maps/mapbox_albers_usa_style.json',\n      center: [LON, LAT],\n      zoom: ZOOM,\n      minZoom: ZOOM - 1,\n    })\n      .addControl(new mapboxgl.AttributionControl({ compact: true }))\n      .addControl(new mapboxgl.NavigationControl({ showCompass: false }), 'top-right');\n\n    //Disable touch zoom, it makes gesture scrolling difficult\n    map.scrollZoom.disable();\n\n    popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false,\n      className: 'map-popup',\n    });\n    map.on('mousemove', 'state-outline', onMouseMove('state-outline'));\n    map.on('mouseleave', 'state-outline', onMouseLeave('state-outline'));\n    [...Object.keys($levels), 'mega-county'].forEach(level => {\n      map.on('mouseenter', level, onMouseEnter(level));\n      map.on('mousemove', level, onMouseMove(level));\n      map.on('mouseleave', level, onMouseLeave(level));\n      map.on('click', level, onClick(level));\n    });\n\n    map.on('idle', ev => {\n      currentDataReadyOnMap.set(true);\n      mapFirstLoaded.set(true);\n    });\n\n    map.on('error', ev => {\n      mapFirstLoaded.set(true);\n    });\n\n    map.on('load', function() {\n      map.addSource('county-outline', {\n        type: 'geojson',\n        data: $geojsons.get('county'),\n      });\n      map.addSource('state-outline', {\n        type: 'geojson',\n        data: $geojsons.get('state'),\n      });\n      map.addSource('city-point', {\n        type: 'geojson',\n        data: $geojsons.get('city'),\n      });\n      map.addSource('mega-county', {\n        type: 'geojson',\n        data: $geojsons.get('state'),\n      });\n\n      map.addLayer({\n        id: 'county-outline',\n        source: 'county-outline',\n        type: 'fill',\n        paint: {\n          'fill-color': MAP_THEME.countyFill,\n          'fill-outline-color': MAP_THEME.countyOutline,\n          'fill-opacity': 0.4,\n        },\n      });\n      map.addLayer({\n        id: 'state-outline',\n        source: 'state-outline',\n        type: 'fill',\n        paint: {\n          'fill-color': 'rgba(0, 0, 0, 0)',\n          'fill-outline-color': MAP_THEME.stateOutline,\n        },\n      });\n\n      Object.keys($levels).forEach(name => {\n        const data = $geojsons.get(name);\n        map.addSource(name, {\n          type: 'geojson',\n          data: $geojsons.get(name),\n        });\n      });\n\n      ['mega-county', ...Object.keys($levels)].forEach(name => {\n        map.addLayer({\n          id: `${name}-hover`,\n          source: name,\n          type: 'line',\n          paint: {\n            'line-color': MAP_THEME.hoverRegionOutline,\n            'line-width': ['case', ['any', ['boolean', ['feature-state', 'hover'], false]], 4, 0],\n          },\n        });\n\n        map.addLayer({\n          id: `${name}-selected`,\n          source: name,\n          type: 'line',\n          paint: {\n            'line-color': MAP_THEME.selectedRegionOutline,\n            'line-width': ['case', ['any', ['boolean', ['feature-state', 'select'], false]], 4, 0],\n          },\n        });\n      });\n\n      map.addLayer({\n        id: 'city-point-unclustered',\n        source: 'city-point',\n        type: 'symbol',\n        filter: ['>', 'population', 900000],\n        maxzoom: 4,\n        layout: {\n          'text-field': ['get', 'city'],\n          'text-font': ['Open Sans Regular'],\n          'text-size': 12,\n        },\n        paint: {\n          'text-halo-color': '#fff',\n          'text-halo-width': 2,\n        },\n      });\n      map.addLayer({\n        id: 'city-point-unclustered-2',\n        source: 'city-point',\n        type: 'symbol',\n        filter: ['>', 'population', 500000],\n        maxzoom: 6,\n        minzoom: 4,\n        layout: {\n          'text-field': ['get', 'city'],\n          'text-font': ['Open Sans Regular'],\n          'text-size': 12,\n        },\n        paint: {\n          'text-halo-color': '#fff',\n          'text-halo-width': 2,\n        },\n      });\n      map.addLayer({\n        id: 'city-point-unclustered-3',\n        source: 'city-point',\n        type: 'symbol',\n        filter: ['>', 'population', 100000],\n        maxzoom: 8,\n        minzoom: 6,\n        layout: {\n          'text-field': ['get', 'city'],\n          'text-font': ['Open Sans Regular'],\n          'text-size': 12,\n        },\n        paint: {\n          'text-halo-color': '#fff',\n          'text-halo-width': 2,\n        },\n      });\n      map.addLayer({\n        id: 'city-point-unclustered-4',\n        source: 'city-point',\n        type: 'symbol',\n        minzoom: 8,\n        layout: {\n          'text-field': ['get', 'city'],\n          'text-font': ['Open Sans Regular'],\n          'text-size': 12,\n        },\n        paint: {\n          'text-halo-color': '#fff',\n          'text-halo-width': 2,\n        },\n      });\n\n      map.addLayer(\n        {\n          id: 'mega-county',\n          source: 'mega-county',\n          type: 'fill',\n          visibility: 'none',\n          filter: ['!=', $signalType, -100],\n          paint: {\n            'fill-outline-color': '#616161',\n            'fill-color': MAP_THEME.countyFill,\n          },\n        },\n        `mega-county-hover`,\n      );\n\n      Object.keys($levels).forEach(name => {\n        map.addLayer(\n          {\n            id: name,\n            source: name,\n            type: 'fill',\n            visibility: 'none',\n            filter: ['!=', $signalType, -100],\n            paint: {\n              'fill-outline-color': '#616161',\n              'fill-color': MAP_THEME.countyFill,\n            },\n          },\n          `${name}-hover`,\n        );\n      });\n\n      mapMounted = true;\n      updateMap('init');\n    });\n  }\n</script>\n\n<style>\n  .map-container {\n    width: 100%;\n    height: 90vh;\n    position: relative;\n    min-height: 550px;\n  }\n\n  .state-buttons-holder {\n    position: absolute;\n    top: 79px;\n    right: 9px;\n    z-index: 100;\n  }\n\n  .state-buttons-holder button:focus {\n    outline: none;\n  }\n\n  .state-buttons-holder .pg-button {\n    font-size: 23px;\n    position: relative;\n    width: 29px;\n    height: 29px;\n    color: #333;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n    padding: 0;\n    box-sizing: content-box;\n    background-color: white;\n    border: 1px solid #d5d5d5;\n    text-align: center;\n    font-family: 'FranklinITCProBold', Helvetica, Arial, sans-serif;\n    line-height: 16px;\n    cursor: pointer;\n    text-decoration: none;\n    user-select: none;\n    transition-delay: 0s;\n    transition-duration: 0.15s;\n    transition-property: background-color;\n    transition-timing-function: ease-in-out;\n  }\n\n  .state-buttons-holder .pg-button:hover {\n    background-color: rgb(213, 213, 213);\n  }\n\n  .state-buttons-holder .pg-button img {\n    width: 90%;\n  }\n</style>\n\n<div bind:this={container} class=\"map-container\">\n  <div class=\"state-buttons-holder\">\n    <button\n      aria-label=\"show entire map\"\n      data-state=\"us48\"\n      id=\"bounds-button\"\n      class=\"pg-button bounds-button\"\n      on:click={_ => map.easeTo({ center: [LON, LAT], zoom: ZOOM, bearing: 0, pitch: 0 })}>\n      <img src=\"./assets/imgs/us48.png\" alt=\"\" />\n    </button>\n  </div>\n</div>\n",
    "<script>\n  import { sensorMap, currentSensor, levels, currentLevel, signalType, currentDataReadyOnMap } from './stores.js';\n\n  let hide = false;\n  export let isIE;\n</script>\n\n<style>\n  .options {\n    font-size: 0.8rem;\n    width: 100%;\n    position: relative;\n  }\n\n  .toggle-button {\n    width: 28px;\n    height: 28px;\n    /* border-radius: 5px; */\n    cursor: pointer;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .toggle-button-icon {\n    width: 24px;\n    height: 24px;\n  }\n\n  .option {\n    width: 100%;\n  }\n\n  .buttons-group-title {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 5px;\n\n    font-weight: 600;\n    font-size: 1em;\n  }\n\n  .buttons-group {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .buttons-group button.button {\n    width: 100%;\n    margin: 0;\n    font-size: 1em;\n    font-weight: 400;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-top-color: transparent;\n    border-width: 1px;\n    color: #666666;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n\n    transition: all 0.1s ease-in;\n\n    position: relative;\n  }\n\n  .buttons-group .button:first-child {\n    border-top-color: #dbdbdb;\n    /* border-top-left-radius: 4px; */\n    /* border-top-right-radius: 4px; */\n  }\n\n  .buttons-group .button:last-child {\n    /* border-bottom-left-radius: 4px; */\n    /* border-bottom-right-radius: 4px; */\n  }\n\n  .buttons-group button.button:disabled {\n    background-color: rgb(211, 211, 211);\n    color: #666666;\n    cursor: not-allowed;\n  }\n\n  .buttons-group button.button .disabled-tooltip {\n    visibility: hidden;\n    width: 80px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #666;\n    background-color: #fff;\n    color: #333;\n    font-weight: 400;\n    font-size: 0.95em;\n    line-height: 1.2em;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 5px;\n    position: absolute;\n    z-index: 1;\n    top: -5px;\n    left: 105%;\n  }\n\n  .buttons-group button.button .disabled-tooltip::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent #666 transparent transparent;\n  }\n\n  .buttons-group button.button:hover .disabled-tooltip {\n    visibility: visible;\n  }\n\n  .buttons-group-side {\n    width: 100%;\n    display: flex;\n    align-items: stretch;\n    justify-content: stretch;\n  }\n\n  .buttons-group-side button.button {\n    /* width: 50%; */\n    flex-grow: 1;\n    margin: 0;\n    font-size: 1em;\n    font-weight: 400;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-left-color: transparent;\n    border-width: 1px;\n    color: #666666;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n\n    transition: all 0.1s ease-in;\n\n    position: relative;\n  }\n\n  .buttons-group-side button.button:disabled {\n    background-color: rgb(211, 211, 211);\n    color: #666666;\n    cursor: not-allowed;\n  }\n\n  .buttons-group-side .button:first-child {\n    border-left-color: #dbdbdb;\n    /* border-top-left-radius: 4px; */\n    /* border-bottom-left-radius: 4px; */\n  }\n\n  .buttons-group-side .button:last-child {\n    /* border-top-right-radius: 4px; */\n    /* border-bottom-right-radius: 4px; */\n  }\n\n  .buttons-group-side button.button .disabled-tooltip {\n    visibility: hidden;\n    width: 80px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #666;\n    background-color: #fff;\n    color: #333;\n    font-size: 0.95em;\n    line-height: 1.2em;\n    font-weight: 400;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 5px;\n    position: absolute;\n    z-index: 1;\n    top: 150%;\n    left: 50%;\n    margin-left: -50px;\n  }\n\n  .buttons-group-side button.button .disabled-tooltip::after {\n    content: '';\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent #666 transparent;\n  }\n  .buttons-group-side button.button:hover .disabled-tooltip {\n    visibility: visible;\n  }\n\n  .buttons-group .button.selected,\n  .buttons-group-side .button.selected {\n    background-color: #767676;\n    /* border-color: transparent; */\n    color: #fff;\n    font-weight: 600;\n  }\n\n  .buttons-group .button:hover,\n  .buttons-group-side .button:hover {\n    background-color: #666666;\n    color: #fff;\n  }\n\n  .buttons-group .button:focus,\n  .buttons-group .button:active,\n  .buttons-group-side .button:focus,\n  .buttons-group-side .button:active {\n    /* box-shadow: none !important; */\n    outline: none;\n  }\n\n  /* button.button:disabled:hover {\n    animation: shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n    transform: translate3d(0, 0, 0);\n  } */\n\n  @keyframes shake {\n    10%,\n    90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n\n    20%,\n    80% {\n      transform: translate3d(2px, 0, 0);\n    }\n\n    30%,\n    50%,\n    70% {\n      transform: translate3d(-4px, 0, 0);\n    }\n\n    40%,\n    60% {\n      transform: translate3d(4px, 0, 0);\n    }\n  }\n</style>\n\n<div class=\"options\">\n  {#if hide}\n    <button\n      role=\"switch\"\n      aria-checked=\"false\"\n      aria-label=\"toggle options\"\n      class=\"toggle-button\"\n      on:click={_ => (hide = !hide)}>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/layers-24px.svg\" alt=\"\" />\n    </button>\n  {:else}\n    <button\n      role=\"switch\"\n      aria-checked=\"true\"\n      aria-label=\"toggle options\"\n      class=\"toggle-button\"\n      on:click={_ => (hide = !hide)}>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/layers_clear-24px.svg\" alt=\"\" />\n    </button>\n\n    <div class=\"option\">\n      <div aria-label=\"geographic level\" class=\"buttons-group\">\n        {#each Object.keys($levels) as level}\n          <button\n            aria-pressed={$currentLevel === level ? 'true' : 'false'}\n            class=\"button {$currentLevel === level ? 'selected' : ''}\"\n            on:click={() => {\n              currentDataReadyOnMap.set(false);\n              currentLevel.set(level);\n            }}\n            title={$sensorMap\n              .get($currentSensor)\n              .levels.includes(level) === false && isIE ? 'Currently unavailable' : ''}\n            disabled={$sensorMap.get($currentSensor).levels.includes(level) === false}>\n            {#if $sensorMap.get($currentSensor).levels.includes(level) === false}\n              <span class=\"disabled-tooltip\">Currently unavailable</span>\n            {/if}\n            {$levels[level]}\n          </button>\n        {/each}\n      </div>\n    </div>\n\n    <br />\n\n    <div class=\"option\">\n      <div aria-label=\"display type\" class=\"buttons-group-side\">\n        <button\n          aria-pressed={$signalType === 'value' ? 'true' : 'false'}\n          class=\"button {$signalType === 'value' ? 'selected' : ''}\"\n          on:click={() => {\n            currentDataReadyOnMap.set(false);\n            signalType.set('value');\n          }}>\n          Intensity\n        </button>\n        <button\n          aria-pressed={$signalType === 'direction' ? 'true' : 'false'}\n          class=\"button {$signalType === 'direction' ? 'selected' : ''}\"\n          on:click={() => {\n            currentDataReadyOnMap.set(false);\n            signalType.set('direction');\n          }}>\n          7-day Trend\n        </button>\n\n      </div>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import {\n    sensors,\n    sensorMap,\n    currentSensor,\n    levels,\n    currentLevel,\n    signalType,\n    currentDataReadyOnMap,\n  } from './stores.js';\n\n  export let isIE;\n\n  let shouldDisplayBanner = true;\n  let currentSensorTooltip;\n\n  $: currentSensorTooltip = $sensorMap.get($currentSensor).mapTitleText;\n</script>\n\n<style>\n  .tabs {\n    font-size: 0.8rem;\n    width: 100%;\n  }\n\n  .buttons-group-side {\n    display: flex;\n    justify-content: center;\n    align-items: stretch;\n    flex-wrap: wrap;\n    /* justify-content: center; */\n    /* flex-wrap: wrap; */\n    pointer-events: auto;\n  }\n\n  .buttons-group-side .button {\n    flex-shrink: 0;\n    font-size: 1em;\n    line-height: 1em;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-width: 1px;\n    margin: -0.5px;\n    color: #666666;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n\n    transition: all 0.1s ease-in;\n\n    position: relative;\n  }\n\n  .buttons-group-side button.button .button-tooltip {\n    visibility: hidden;\n    width: 180px;\n    border-style: solid;\n    border-width: 1px;\n    border-color: #666;\n    background-color: #fff;\n    color: #333;\n    font-weight: 400;\n    font-size: 0.95em;\n    line-height: 1.2em;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 5px;\n    position: absolute;\n    z-index: 1;\n    top: 150%;\n    left: 50%;\n    margin-left: -90px;\n  }\n\n  .buttons-group-side button.button .button-tooltip::after {\n    content: '';\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent #666 transparent;\n  }\n  .buttons-group-side button.button:hover .button-tooltip {\n    visibility: visible;\n  }\n\n  .buttons-group-side .button.selected {\n    background-color: #767676;\n    /* border-color: transparent; */\n    color: #fff;\n    font-weight: 600;\n  }\n\n  .buttons-group-side .button:hover {\n    background-color: #666666;\n    color: #fff;\n  }\n\n  .buttons-group-side .button:focus,\n  .buttons-group-side .button:active {\n    /* box-shadow: none !important; */\n    outline: none;\n  }\n\n  .banner-container {\n    font-size: 0.9rem;\n    margin-top: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .banner {\n    box-sizing: border-box;\n    max-width: 800px;\n    /* border-radius: 6px; */\n    /* border-style: solid;\n    border-width: 1px;\n    border-color: #666; */\n    background-color: rgba(255, 255, 255, 0.9);\n    /* background-color: transparent; */\n    color: #333;\n    font-weight: 400;\n    font-size: 1.6em;\n    line-height: 1.2em;\n    font-weight: 600;\n    text-align: center;\n    padding: 5px 24px;\n\n    pointer-events: none;\n\n    position: relative;\n  }\n\n  .banner-text {\n    padding: 1px 5px;\n    margin: 0;\n    background: transparent;\n    /* background-color: rgba(255,255,255, 0.9); */\n    pointer-events: auto;\n\n    /* position: relative; */\n  }\n\n  .hide-banner-button {\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    width: 20px;\n    height: 20px;\n    color: #333;\n    font-size: 16px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n\n    transition: opacity 0.1s ease-in;\n    pointer-events: auto;\n    opacity: 0.5;\n  }\n\n  .hide-banner-button:hover {\n    opacity: 1;\n  }\n\n  .tab-label {\n    font-weight: 800;\n    flex-shrink: 0;\n    font-size: 1em;\n    line-height: 1em;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-width: 1px;\n    margin: -0.5px;\n    color: #666666;\n    cursor: default;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    color: black;\n    position: relative;\n  }\n\n  .official-side {\n    margin-top: 5px;\n  }\n</style>\n\n<div class=\"tabs\">\n  <div aria-label=\"Data Source\" class=\"buttons-group-side\">\n    <button title=\"Indicators: \" class=\"tab-label\">Indicators:</button>\n    {#each Array.from($sensorMap.keys()).filter(d => !$sensorMap.get(d).official) as sensor}\n      <button\n        title={isIE !== undefined ? $sensorMap.get(sensor).tooltipText : ''}\n        aria-pressed={$currentSensor === sensor ? 'true' : 'false'}\n        class=\"button {$currentSensor === sensor ? 'selected' : ''}\"\n        on:click={() => {\n          currentDataReadyOnMap.set(false);\n          currentSensor.set(sensor);\n          shouldDisplayBanner = true;\n        }}>\n        <span class=\"button-tooltip\">{$sensorMap.get(sensor).tooltipText}</span>\n        {$sensorMap.get(sensor).name}\n      </button>\n    {/each}\n  </div>\n  <div aria-label=\"Data Source\" class=\"official-side buttons-group-side\">\n    <button title=\"Official Reports: \" class=\"tab-label\">Official Reports:</button>\n    {#each Array.from($sensorMap.keys()).filter(d => $sensorMap.get(d).official) as sensor}\n      <button\n        title={isIE !== undefined ? $sensorMap.get(sensor).tooltipText : ''}\n        aria-pressed={$currentSensor === sensor ? 'true' : 'false'}\n        class=\"button {$currentSensor === sensor ? 'selected' : ''}\"\n        on:click={() => {\n          currentDataReadyOnMap.set(false);\n          currentSensor.set(sensor);\n          shouldDisplayBanner = true;\n        }}>\n        <span class=\"button-tooltip\">{$sensorMap.get(sensor).tooltipText}</span>\n        {$sensorMap.get(sensor).name}\n      </button>\n    {/each}\n  </div>\n</div>\n\n{#if shouldDisplayBanner}\n  <div class=\"banner-container\">\n    <div class=\"banner\">\n      <button\n        title=\"Hide map title\"\n        aria-label=\"toggle banner\"\n        class=\"hide-banner-button\"\n        on:click={_ => {\n          shouldDisplayBanner = false;\n        }}>\n        &#10005;\n      </button>\n      <span class=\"banner-text\">{currentSensorTooltip}</span>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import { onMount } from 'svelte';\n  import {\n    currentDate,\n    times,\n    currentSensor,\n    currentDataReadyOnMap,\n    signalType,\n    currentLevel,\n    timeRangeOnSlider,\n    yesterday,\n  } from './stores.js';\n  import { calculateValFromRectified } from './util.js';\n  import * as d3 from 'd3';\n\n  let timeSliderPaddingLeft;\n  let timeSliderPaddingRight;\n  let timeSlider;\n  let selectedDateDisplay;\n\n  let parseTime = d3.timeParse('%Y%m%d');\n  let formatTime = d3.timeFormat('%B %d, %Y');\n  let formatTimeWithoutYear = d3.timeFormat('%B %d');\n\n  let interval = 14;\n  let rectifiedRange = interval;\n  let sliderTotalLength = 320; // in px\n  let canLoadMore = true;\n\n  let playInterval;\n\n  let val = $currentDate;\n  let min = $currentDate;\n  let max = $currentDate;\n\n  let rectifiedVal = parseTime(val).getTime();\n  let rectifiedMax = parseTime(yesterday).getTime();\n  let rectifiedMin = rectifiedMax - rectifiedRange * 86400 * 1000;\n\n  let dataRangeMin = parseTime(min).getTime();\n  let dataRangeMax = parseTime(max).getTime();\n\n  let prettyDate = '';\n  $: prettyDate = formatTime(new Date(rectifiedVal));\n\n  onMount(() => {\n    currentDate.subscribe(d => {\n      if (d === 20100420) return;\n      val = d;\n      rectifiedVal = parseTime(val).getTime();\n      if (rectifiedVal >= rectifiedMax) {\n        rectifiedVal = rectifiedMax;\n        currentDate.set(+calculateValFromRectified(rectifiedVal));\n      } else if (rectifiedVal <= rectifiedMin) {\n        rectifiedVal = rectifiedMin;\n        currentDate.set(+calculateValFromRectified(rectifiedVal));\n      }\n      updateSliderUI();\n    });\n  });\n\n  times.subscribe(t => (t ? update($currentSensor, t) : ''));\n  currentSensor.subscribe(s => ($times ? update(s, $times, true) : ''));\n\n  function update(s, t, newSensor = false) {\n    max = t.get(s)[1];\n    min = t.get(s)[0];\n    dataRangeMin = parseTime(min).getTime();\n    dataRangeMax = parseTime(max).getTime();\n\n    if (\n      newSensor &&\n      dataRangeMin <= rectifiedMin &&\n      parseTime($currentDate).getTime() >= rectifiedMin &&\n      parseTime($currentDate).getTime() <= rectifiedMax\n    ) {\n      // console.log('fine not to change slider range');\n    } else {\n      rectifiedRange = interval;\n      rectifiedMin = rectifiedMax - rectifiedRange * 86400 * 1000;\n      if (rectifiedMin < dataRangeMin) {\n        rectifiedMin = dataRangeMin;\n        rectifiedRange = (rectifiedMax - rectifiedMin) / (86400 * 1000);\n      }\n    }\n\n    updateSliderUI();\n\n    // currentDate.set(max);\n    // console.log('set to max');\n  }\n\n  function updateSliderUI() {\n    if (dataRangeMax <= rectifiedMax && dataRangeMin >= rectifiedMin) {\n      /**\n       * fall within\n       *    -------------------\n       *        ---------\n       */\n      // console.log('within');\n      let leftPercentage = (dataRangeMin - rectifiedMin) / (rectifiedRange * 86400 * 1000);\n      let middlePercentage = (dataRangeMax - dataRangeMin) / (rectifiedRange * 86400 * 1000);\n      let rightPercentage = (rectifiedMax - dataRangeMax) / (rectifiedRange * 86400 * 1000);\n      // console.log(leftPercentage, middlePercentage, rightPercentage);\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', dataRangeMin);\n      timeSlider.setAttribute('max', dataRangeMax);\n      timeRangeOnSlider.set({\n        min: +calculateValFromRectified(dataRangeMin),\n        max: +calculateValFromRectified(dataRangeMax),\n      });\n      canLoadMore = false;\n    } else if (dataRangeMax <= rectifiedMax && dataRangeMin <= rectifiedMin) {\n      /**\n       *\n       *    -------------------\n       *  ---------\n       */\n      // console.log('left');\n      let leftPercentage = 0;\n      let middlePercentage = (dataRangeMax - rectifiedMin) / (rectifiedRange * 86400 * 1000);\n      let rightPercentage = (rectifiedMax - dataRangeMax) / (rectifiedRange * 86400 * 1000);\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', rectifiedMin);\n      timeSlider.setAttribute('max', dataRangeMax);\n      timeRangeOnSlider.set({\n        min: +calculateValFromRectified(rectifiedMin),\n        max: +calculateValFromRectified(dataRangeMax),\n      });\n      canLoadMore = true;\n    } else if (dataRangeMax >= rectifiedMax && dataRangeMin >= rectifiedMin) {\n      /**\n       *\n       *    -------------------\n       *                ---------\n       */\n      // console.log('right');\n      let leftPercentage = (dataRangeMin - rectifiedMin) / (rectifiedRange * 86400 * 1000);\n      let middlePercentage = (rectifiedMax - dataRangeMin) / (rectifiedRange * 86400 * 1000);\n      let rightPercentage = 0;\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', dataRangeMin);\n      timeSlider.setAttribute('max', rectifiedMax);\n      timeRangeOnSlider.set({\n        min: +calculateValFromRectified(dataRangeMin),\n        max: +calculateValFromRectified(rectifiedMax),\n      });\n      canLoadMore = false;\n    } else if (dataRangeMax >= rectifiedMax && dataRangeMin <= rectifiedMin) {\n      /**\n       *\n       *    -------------------\n       *  -----------------------\n       */\n      // console.log('out');\n      let leftPercentage = 0;\n      let middlePercentage = 1;\n      let rightPercentage = 0;\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', rectifiedMin);\n      timeSlider.setAttribute('max', rectifiedMax);\n      timeRangeOnSlider.set({\n        min: +calculateValFromRectified(rectifiedMin),\n        max: +calculateValFromRectified(rectifiedMax),\n      });\n      canLoadMore = true;\n    }\n\n    // console.log(canLoadMore);\n  }\n\n  function sliderOnChange() {\n    window.performance.mark('start sliderOnChange');\n    // only update currentDataReadyOnMap when the date actually changed\n    currentDate.update(d => {\n      let newDate = calculateValFromRectified(rectifiedVal);\n      if (d !== newDate) {\n        currentDataReadyOnMap.set(false);\n      }\n      return newDate;\n    });\n    window.performance.measure('sliderOnChange', 'start sliderOnChange');\n  }\n\n  function loadMoreDataRange() {\n    rectifiedRange += interval;\n    rectifiedMin = rectifiedMax - rectifiedRange * 86400 * 1000;\n    if (rectifiedMin < dataRangeMin) {\n      rectifiedMin = dataRangeMin;\n      rectifiedRange = (rectifiedMax - rectifiedMin) / (86400 * 1000);\n    }\n\n    updateSliderUI();\n  }\n\n  currentSensor.subscribe(_ => cancelPlay());\n  currentLevel.subscribe(_ => cancelPlay());\n  signalType.subscribe(_ => cancelPlay());\n\n  function playTime() {\n    if (!playInterval) {\n      let maxDateOnSlider = +timeSlider.getAttribute('max');\n      if (rectifiedVal >= maxDateOnSlider) return;\n      playInterval = setInterval(_ => {\n        if (rectifiedVal < maxDateOnSlider) {\n          rectifiedVal += 86400 * 1000;\n          sliderOnChange();\n        } else {\n          cancelPlay();\n        }\n      }, 2000);\n    } else {\n      cancelPlay();\n    }\n  }\n\n  function cancelPlay() {\n    clearInterval(playInterval);\n    playInterval = null;\n  }\n</script>\n\n<style>\n  .time {\n    display: inline-flex;\n    align-items: center;\n    width: 100%;\n    position: relative;\n  }\n\n  .selected-date {\n    position: absolute;\n    top: -20px;\n    left: 10px;\n    height: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .load-more-button {\n    position: absolute;\n    bottom: -18px;\n    left: 10px;\n\n    margin: 0;\n    font-size: 0.7rem;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-width: 1px;\n    color: #666666;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: calc(0.3rem - 1px);\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    padding-top: calc(0.3rem - 1px);\n\n    transition: all 0.1s ease-in;\n  }\n\n  .load-more-button:hover {\n    background-color: #666666;\n    color: #fff;\n  }\n\n  .load-more-button:focus {\n    outline: none;\n  }\n\n  .load-more-button:disabled {\n    background-color: rgb(211, 211, 211);\n    color: #666666;\n    cursor: not-allowed;\n    font-size: 0.7rem;\n    transform: none;\n  }\n\n  @keyframes shake {\n    10%,\n    90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n\n    20%,\n    80% {\n      transform: translate3d(2px, 0, 0);\n    }\n\n    30%,\n    50%,\n    70% {\n      transform: translate3d(-4px, 0, 0);\n    }\n\n    40%,\n    60% {\n      transform: translate3d(4px, 0, 0);\n    }\n  }\n\n  .time p {\n    flex-shrink: 0;\n    margin-left: 10px;\n    margin-right: 10px;\n    color: var(--grey);\n  }\n\n  .time p.min-max {\n    font-size: 0.8rem;\n    color: #666;\n  }\n\n  #timeSliderPaddingLeft,\n  #timeSliderPaddingRight {\n    height: 6px;\n    padding: 0;\n    border-style: none;\n    background: repeating-linear-gradient(-45deg, #666, #666 2px, #eee 2px, #eee 4px);\n    outline: none;\n    opacity: 0.7;\n  }\n\n  #timeSliderPaddingLeft {\n    position: relative;\n  }\n\n  .slider {\n    -webkit-appearance: none;\n    width: 320px;\n    height: 6px;\n    padding: 0;\n    border: none;\n    background: #d3d3d3;\n    outline: none;\n    opacity: 0.9;\n    margin: 0;\n  }\n\n  .slider::-moz-focus-outer {\n    border: 0;\n  }\n\n  input[type='range'].slider::-ms-track {\n    width: 320px;\n    height: 6px;\n    cursor: pointer;\n\n    /* Hides the slider so custom styles can be added */\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n\n  .slider::-ms-tooltip {\n    display: none;\n  }\n\n  .slider::-ms-fill-lower {\n    background: #d3d3d3;\n  }\n\n  .slider:focus::-ms-fill-lower {\n    background: #d3d3d3;\n  }\n\n  .slider::-ms-fill-upper {\n    background: #d3d3d3;\n  }\n\n  .slider:focus::-ms-fill-upper {\n    background: #d3d3d3;\n  }\n\n  /* Special styling for WebKit/Blink */\n  .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: var(--red);\n    cursor: pointer;\n  }\n\n  /* All the same stuff for Firefox */\n  .slider::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: var(--red);\n    cursor: pointer;\n  }\n\n  /* All the same stuff for IE */\n  .slider::-ms-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #c00;\n    cursor: pointer;\n  }\n\n  .loader-container {\n    /* position: absolute;\n    top: 0;\n    bottom: 0;\n    right: -40px;\n    width: 40px; */\n\n    height: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .loader {\n    border: 4px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 4px solid #c41230;\n    width: 20px;\n    height: 20px;\n    -webkit-animation: spin 1s linear infinite; /* Safari */\n    animation: spin 1s linear infinite;\n  }\n\n  button.play-button-container-button {\n    background: transparent;\n    padding: 0;\n    margin: 0;\n    border: 0;\n    margin-right: 10px;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .play-button {\n    width: 30px;\n    cursor: pointer;\n  }\n\n  /* Safari */\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<div aria-label=\"date\" class=\"time\">\n  <div aria-live=\"assertive\" id=\"time-label\" class=\"selected-date\" bind:this={selectedDateDisplay}>\n    Viewing estimates for: {formatTimeWithoutYear(new Date(rectifiedVal))}\n  </div>\n\n  <button class=\"load-more-button\" on:click={loadMoreDataRange} disabled={!canLoadMore}>Load up to 2 more weeks</button>\n\n  <p aria-label=\"minimum value\" class=\"min-max\">{formatTime(new Date(rectifiedMin))}</p>\n  <div id=\"timeSliderPaddingLeft\" bind:this={timeSliderPaddingLeft} />\n  <input\n    aria-controls=\"time-label\"\n    id=\"time_slider\"\n    bind:this={timeSlider}\n    type=\"range\"\n    min={0}\n    max={0}\n    step={86400000}\n    aria-label={formatTimeWithoutYear(new Date(rectifiedVal))}\n    on:mouseup={sliderOnChange}\n    on:touchend={sliderOnChange}\n    on:keyup={sliderOnChange}\n    class=\"slider\"\n    bind:value={rectifiedVal} />\n  <div id=\"timeSliderPaddingRight\" bind:this={timeSliderPaddingRight} />\n  <p aria-label=\"maximum value\" class=\"min-max\">{formatTime(new Date(rectifiedMax))} (Yesterday)</p>\n\n  <button\n    aria-pressed={playInterval ? 'true' : 'false'}\n    class=\"play-button-container-button\"\n    on:click={_ => playTime()}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"play-button\"\n      viewBox=\"0 0 200 200\"\n      alt=\"play\"\n      fill={playInterval ? '#c00' : '#666'}\n      stroke={playInterval ? '#c00' : '#666'}>\n      <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"none\" stroke-width=\"15\" />\n      <!-- <polygon points=\"70, 55 70, 145 145, 100\" /> -->\n      {#if playInterval}\n        <rect x=\"65\" y=\"52\" width=\"20\" height=\"90\" />\n        <rect x=\"115\" y=\"52\" width=\"20\" height=\"90\" />\n      {:else}\n        <polygon points=\"70, 55 70, 145 145, 100\" />\n      {/if}\n    </svg>\n  </button>\n\n  {#if $currentDataReadyOnMap === false}\n    <div class=\"loader-container\">\n      <div class=\"loader\" />\n    </div>\n  {/if}\n\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}