{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Graph.svelte",
    "../../Legend.svelte",
    "../../MapBox.svelte",
    "../../Options.svelte",
    "../../Tabs.svelte",
    "../../Time.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte';\n  import Options from './Options.svelte';\n  import Tabs from './Tabs.svelte';\n  import Time from './Time.svelte';\n  import Legend from './Legend.svelte';\n  import MapBox from './MapBox.svelte';\n  import Graph from './Graph.svelte';\n\n  import {\n    sensors,\n    times,\n    signalType,\n    currentRange,\n    currentSensor,\n    currentDate,\n    currentLevel,\n    currentRegion,\n    regionSliceCache,\n    timeSliceCache,\n    currentData,\n    regionData,\n    metaData,\n    mounted,\n  } from './stores.js';\n\n  import * as d3 from 'd3';\n\n  const ENDPOINT = 'https://delphi.cmu.edu/epidata/api.php?source=covidcast&time_type=day';\n  const ENDPOINT_META = 'https://delphi.cmu.edu/epidata/api.php?source=covidcast_meta';\n\n  let error = null;\n  let changingSensor = false;\n\n  function updateRegionSliceCache(sensor, level, date, reason = 'unspecified') {\n    console.log($regionSliceCache);\n    if (!$mounted) return;\n    console.log(sensor, level, date, $times.get(sensor));\n    if (!$sensors.find(d => d.id === sensor).levels.includes(level)) return;\n    if (date > $times.get(sensor)[1] || reason === 'level change') return;\n\n    let cacheEntry = $regionSliceCache.get(sensor + level + date);\n    if (!cacheEntry) {\n      let q =\n        ENDPOINT +\n        '&data_source=' +\n        sensor +\n        '&signal=' +\n        $sensors.find(d => d.id === sensor).signal +\n        '&geo_type=' +\n        level +\n        '&time_values=' +\n        date +\n        '&geo_value=*';\n      fetch(q)\n        .then(d => d.json())\n        .then(d => {\n          console.log(reason, q, d);\n          if (d.result < 0 || d.message.includes('no results')) {\n            console.log('bad api call, not updating regionSliceCache');\n            currentData.set([]);\n            regionSliceCache.update(m => m.set(sensor + level + date, []));\n          } else {\n            currentData.set(d.epidata);\n            regionSliceCache.update(m => m.set(sensor + level + date, d.epidata));\n          }\n        });\n    } else {\n      console.log(reason, 'got in cache');\n      currentData.set(cacheEntry);\n    }\n  }\n\n  function updateTimeSliceCache(sensor, level, region) {\n    if (!$mounted) return;\n    if (!region) {\n      regionData.set([]);\n      return;\n    }\n    let cacheEntry = $timeSliceCache.get(sensor + level + region);\n    if (!cacheEntry) {\n      let q =\n        ENDPOINT +\n        '&data_source=' +\n        sensor +\n        '&signal=' +\n        $sensors.find(d => d.id === sensor).signal +\n        '&geo_type=' +\n        level +\n        '&time_values=20100101-20300101' +\n        '&geo_value=' +\n        region;\n      fetch(q)\n        .then(d => d.json())\n        .then(d => {\n          regionData.set(d.epidata);\n          timeSliceCache.update(m => m.set(sensor + level + region, d.epidata));\n        });\n    } else regionData.set(cacheEntry);\n  }\n\n  let levelChangedWhenSensorChanged = false;\n  let dateChangedWhenSensorChanged = false;\n\n  currentSensor.subscribe(s => {\n    if (!$mounted) return;\n    // facebook fix\n    if (s === 'fb_survey') {\n      signalType.set('value');\n    }\n\n    let l = $currentLevel;\n    let date = $times.get(s)[1];\n\n    if (!$sensors.find(d => d.id === s).levels.includes($currentLevel)) {\n      console.log('update?');\n      l = $sensors.find(d => d.id === s).levels[0];\n      levelChangedWhenSensorChanged = true;\n      currentLevel.set(l);\n    }\n    if (date !== $currentDate) {\n      console.log('now?');\n      dateChangedWhenSensorChanged = true;\n      currentDate.set(date);\n    }\n\n    updateRegionSliceCache(s, l, date, 'sensor-change');\n  });\n\n  currentLevel.subscribe(l => {\n    console.log('level update');\n    if (levelChangedWhenSensorChanged) {\n      levelChangedWhenSensorChanged = false;\n    } else {\n      updateRegionSliceCache($currentSensor, l, $currentDate, 'level-change');\n    }\n  });\n\n  currentDate.subscribe(d => {\n    console.log('date update');\n    if (dateChangedWhenSensorChanged) {\n      dateChangedWhenSensorChanged = false;\n    } else {\n      updateRegionSliceCache($currentSensor, $currentLevel, d, 'date-change');\n    }\n  });\n\n  currentRegion.subscribe(r => {\n    console.log('update region');\n    updateTimeSliceCache($currentSensor, $currentLevel, r);\n  });\n\n  onMount(_ => {\n    fetch(ENDPOINT_META)\n      .then(d => d.json())\n      .then(meta => {\n        metaData.set(meta.epidata);\n        console.log(meta.epidata);\n        let timeMap = new Map();\n        $sensors.forEach(s => {\n          let matchedMeta = meta.epidata.find(\n            d => d.data_source === s.id && d.signal === s.signal && d.time_type === 'day',\n          );\n          console.log(s, matchedMeta);\n          timeMap.set(s.id, [matchedMeta.min_time, matchedMeta.max_time]);\n        });\n        times.set(timeMap);\n\n        let l = $currentLevel;\n        if (!$sensors.find(d => d.id === $currentSensor).levels.includes($currentLevel)) {\n          console.log('update?');\n          l = $sensors.find(d => d.id === $currentSensor).levels[0];\n          currentLevel.set(l);\n        }\n\n        let q =\n          ENDPOINT +\n          '&data_source=' +\n          $currentSensor +\n          '&signal=' +\n          $sensors.find(d => d.id === $currentSensor).signal +\n          '&geo_type=' +\n          l +\n          '&time_values=' +\n          timeMap.get($currentSensor)[1] +\n          '&geo_value=*';\n        fetch(q)\n          .then(d => d.json())\n          .then(d => {\n            console.log(q, d);\n            if (d.result < 0 || d.message.includes('no results')) {\n              console.log('bad api call, not updating regionSliceCache');\n              currentData.set([]);\n              regionSliceCache.update(m => m.set($currentSensor + $currentLevel + timeMap.get($currentSensor)[1], []));\n            } else {\n              currentData.set(d.epidata);\n              regionSliceCache.update(m =>\n                m.set($currentSensor + $currentLevel + timeMap.get($currentSensor)[1], d.epidata),\n              );\n            }\n\n            mounted.set(1);\n          });\n      });\n  });\n</script>\n\n<style>\n  .options-container {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 1000;\n    /* width: 220px; */\n    background-color: rgba(255, 255, 255, 0.7);\n    /* border-radius: 8px; */\n    padding: 10px 10px;\n    box-sizing: border-box;\n\n    transition: all 0.1s ease-in;\n\n    /* background-color: black; */\n    /* border: 1px solid black; */\n  }\n\n  .tabs-container {\n    position: absolute;\n    top: 10px;\n    left: 50px;\n    right: 50px;\n    z-index: 1000;\n    /* max-width: 750px; */\n    /* background-color: rgba(255, 255, 255, 0.7); */\n    /* border-radius: 8px; */\n    /* padding: 10px 10px; */\n    box-sizing: border-box;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    transition: all 0.1s ease-in;\n\n    /* background-color: black; */\n    /* border: 1px solid black; */\n  }\n\n  .legend-container {\n    position: absolute;\n    top: 240px;\n    left: 10px;\n    z-index: 1000;\n    /* background-color: rgba(255, 255, 255, 0.7); */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    transition: all 0.1s ease-in;\n\n    height: 40%;\n  }\n\n  .graph-container {\n    position: absolute;\n    bottom: 2vh;\n    right: 2vh;\n    z-index: 1001;\n    max-width: 400px;\n    width: 400px;\n    background-color: rgba(255, 255, 255, 0.7);\n    /* border-radius: 1rem; */\n    padding: 10px 15px;\n    box-sizing: border-box;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .time-container {\n    position: absolute;\n    bottom: 10px;\n    left: 10px;\n    z-index: 1002;\n    background-color: rgba(255, 255, 255, 0.7);\n    /* border-radius: 8px; */\n    padding: 30px 10px;\n    box-sizing: border-box;\n    /* width: 550px; */\n\n    transition: all 0.1s ease-in;\n  }\n\n  .options-container:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  /* .options-container:hover,\n  .time-container:hover,\n  .graph-container:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }  */\n\n  .error-message-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    color: gray;\n  }\n</style>\n\n{#if error}\n  <div class=\"error-message-container\">Failed to load data. Please try again later...</div>\n{/if}\n\n<MapBox />\n\n<div class=\"tabs-container\">\n  <Tabs />\n</div>\n\n<div class=\"options-container\">\n  <Options />\n</div>\n\n<div class=\"legend-container\">\n  <Legend />\n</div>\n\n<div class=\"time-container\">\n  <Time {updateRegionSliceCache} />\n</div>\n\n<div class=\"graph-container\">\n  <Graph />\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import {\n    currentRegion,\n    currentRegionName,\n    currentSensor,\n    currentLevel,\n    currentData,\n    regionData,\n    regionDataStats,\n    currentSensorName,\n    currentLevelName,\n    currentDate,\n    times\n  } from \"./stores.js\";\n  import { DIRECTION_THEME } from \"./theme.js\";\n  import * as d3 from \"d3\";\n\n  let el;\n  let w;\n  let t;\n\n  // the $ syntax just says, if w is changed, run drawGraph() - e.g. redraw the graph when the window is resized.\n  // $: w, drawGraph();\n\n  // This subscribes to sample data to redraw the graph every time the data changes.\n  // todo: fix current region subscription\n  // currentRegion.subscribe(_ => updateGraph());\n  onMount(_ => drawGraph());\n\n  // local variables for permissible graph types\n  const barChart = \"Bar_Chart\";\n  const lineGraph = \"Line_Graph\";\n  const charts = [barChart, lineGraph];\n  let userCharts = [];\n  let currentChart = 0;\n\n  regionData.subscribe(d => updateGraph(d));\n  regionDataStats.subscribe(d => setChartRange(d));\n  currentDate.subscribe(_ => updateGraphTimeRange());\n  // currentDataReadyOnMay.subscribe(d => setFocus());\n  // regionDataStats.subscribe(d => console.log(d));\n\n  function drawGraph() {\n    let chart = new Chart();\n    chart.draw();\n    userCharts.push(chart);\n  }\n\n  function updateGraph(data) {\n    if (data.length !== 0) {\n      if (userCharts != undefined) {\n        if (userCharts[currentChart].isChart()) {\n          userCharts[currentChart].draw();\n        } else {\n          var dataResults = parseData(data);\n          var graphType = dataResults[0];\n          var graphData = dataResults[1];\n          var range = dataResults[2];\n          var n = dataResults[3];\n          userCharts[currentChart] = new Chart(graphType, graphData, range, n);\n          userCharts[currentChart].draw();\n        }\n      }\n    }\n  }\n\n  function updateGraphTimeRange() {\n    if (userCharts[currentChart]) {\n      userCharts[currentChart].draw();\n    }\n  }\n\n  // parse data\n  function parseData(clickedData) {\n    let data = clickedData;\n    // let region = $currentRegion;\n\n    // search for the ID\n    // let re = new RegExp('US[0-9]+');\n    // let geo = region.match(re);\n    // console.log('region data: ' + geo);\n    // console.log('data: ' + data);\n    // for (var i = 0; i < data.length; i++) {\n    //   console.log(data[i].time_value);\n    // }\n\n    // todo: finish parsing data\n\n    // todo: determine chart type based on data\n    var dataRange = userCharts[currentChart].getRange();\n    var n = userCharts[currentChart].getN();\n    var cType = lineGraph;\n    return [cType, data, dataRange, n];\n  }\n\n  function setChartRange(data) {\n    if (data) {\n      // console.log('data: ' + data);\n      let { min_value, max_value } = data;\n      let { num_locations } = data;\n      // console.log(num_locations);\n      let stats = $regionDataStats;\n      // console.log('data: ' + data[0]);\n      // console.log('stats: ' + stats);\n      // let min = dataStats.min_value;\n      // let max = dataStats.max_value;\n      // console.log(currentChart);\n      if (userCharts[currentChart] !== undefined) {\n        userCharts[currentChart].setRange(min_value, max_value);\n        userCharts[currentChart].setN(num_locations);\n      }\n    }\n  }\n\n  class Chart {\n    constructor(chartType, data, dataRange, num) {\n      var chart;\n      this.chartType = chartType;\n      this.x = null;\n      this.y = null;\n      switch (chartType) {\n        case \"Bar_Chart\":\n          chart = new BarChart();\n          chart.setData(data);\n          break;\n        case \"Line_Graph\":\n          chart = new LineGraph();\n          chart.setData(data);\n          chart.setRange(dataRange[0], dataRange[1]);\n          chart.setN(num);\n          break;\n        default:\n          TypeError(\"Chart type not a valid type.\");\n      }\n      return chart;\n    }\n\n    setData(data) {\n      // this.verifyDataFormat(data);\n      // if(this.data === null) {\n      this.data = data;\n      // } else {\n      //   new Error('Cannot set data. Data already set. Use update method to change values.');\n      // }\n    }\n\n    getData() {\n      return this.data;\n    }\n\n    setN(num) {\n      this.n = num;\n    }\n\n    getN() {\n      if (this.n) {\n        return this.n;\n      } else {\n        console.log(\"n: \" + this.n);\n      }\n    }\n\n    getYAxis() {\n      let title = \"\";\n      let sensor = $currentSensor;\n      switch (sensor) {\n        case \"google-survey\":\n          title = \"Percentage\";\n          break;\n        case \"fb_survey\":\n          title = \"Percentage\";\n          break;\n        case \"quidel\":\n          title = \"Percentage\";\n          break;\n        case \"ght\":\n          title = \"Frequency\";\n          break;\n        case \"doctor-visits\":\n          title = \"Percentage\";\n          break;\n        default:\n          break;\n      }\n      return title;\n    }\n\n    getChartTitle() {\n      var ChartTitle = \"Currently viewing sensor \";\n      let sensor = $currentSensorName;\n      let geoLevel = $currentLevelName;\n      var cT =\n        ChartTitle +\n        \" <strong> \" +\n        sensor +\n        \"</strong> at the <strong>\" +\n        geoLevel +\n        \"</strong> level\";\n      d3.select(t).html(cT);\n    }\n\n    isChart() {\n      var result = null;\n      try {\n        this.chartType in charts ? (result = true) : (result = false);\n      } catch (e) {\n        if (e.name == \"ReferenceError\") {\n          result = false;\n        }\n      }\n      return result;\n    }\n\n    verifyDataFormat() {}\n\n    draw() {\n      // if there is an existing chart, remove it and redraw\n      d3.select(el)\n        .selectAll(\"*\")\n        .remove();\n\n      // size chart\n      var margin = { top: 20, right: 20, bottom: 70, left: 40 },\n        width = w - margin.left - margin.right,\n        height = 0.75 * w - margin.top - margin.bottom;\n\n      // parse the date time\n      var parseDate = d3.timeParse(\"%Y%m%d\");\n\n      // set ranges\n      this.x = d3.scaleBand().rangeRound([0, width]);\n      this.y = d3.scaleLinear().range([height, 0]);\n\n      // attach graphic\n      var svg = d3\n        .select(el)\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      // draw axes\n      svg\n        .append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(this.x).tickFormat(\"%m %d\"));\n      svg.append(\"g\").call(d3.axisLeft(this.y));\n    }\n\n    updateChart() {}\n\n    setRange(min, max) {\n      this.min = min;\n      this.max = max;\n    }\n\n    getRange() {\n      return [this.min, this.max];\n    }\n    updateAxes() {}\n  }\n\n  class BarChart extends Chart {\n    // verify that the supplied data is an array of integers for a single data source\n    verifyDataFormat(data) {\n      super.verifyDataFormat();\n      !Number.isInteger(Object.values(data))\n        ? TypeError(\n            \"Provided data is of the wrong type. Only integers accepted.\"\n          )\n        : true;\n      data.length > 1\n        ? RangeError(\n            \"Bar charts are only valid for single data sources. Comparisons are not supported.\"\n          )\n        : true;\n      data.length < 1 ? ReferenceError(\"No data was provided.\") : true;\n    }\n\n    draw() {\n      super.draw();\n    }\n  }\n\n  class LineGraph extends Chart {\n    draw() {\n      // test function\n      calculateSD();\n\n      // if there is an existing chart, remove it and redraw\n      d3.select(el)\n        .selectAll(\"*\")\n        .remove();\n\n      // line graph\n      let myData = this.getData();\n\n      // size chart\n      var margin = { top: 5, right: 42, bottom: 50, left: 60 }, // right need to be wide enough to accommodate the tooltip\n        width = w - margin.left - margin.right,\n        height = 0.75 * w - margin.top - margin.bottom;\n\n      d3.select(el).html(\"\");\n      var svg = d3\n        .select(el)\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      // set date range\n      var parseTime = d3.timeParse(\"%Y%m%d\");\n      var k = d3.keys(myData);\n      var times = k.map(i => parseTime(myData[k[i]][\"time_value\"]));\n      var maxDate = parseTime($currentDate);\n      var twoWeeks = 60 * 60 * 24 * 1000 * 7 * 2;\n      var bisectDate = d3.bisector(function(d) {\n        return d.time_value;\n      }).right;\n      var minDate = maxDate - twoWeeks;\n      minDate = new Date(minDate);\n      myData = myData.filter(it => parseTime(it[\"time_value\"]) < maxDate);\n      myData = myData.filter(it => parseTime(it[\"time_value\"]) > minDate);\n\n      // set x-axis ticks based off of data sparsity and format y-axis ticks\n      var xTicks = myData.length;\n      var formatXTicks = xTicks < 6 ? xTicks : d3.timeDay.every(3);\n      var scalePercentages = function(d) {\n        return formatPercent(d * 100);\n      };\n      var percentFormat = this.getYAxis() == \"Percentage\";\n      var formatYTicks = percentFormat ? d3.format(\".0%\") : d3.format(\".0f\");\n      var x = d3\n        .scaleTime()\n        .domain(d3.extent(myData, d => parseTime(d.time_value)))\n        .range([0, width]);\n      var y = d3\n        .scaleLinear()\n        .domain([this.min, this.max * 1.2])\n        .range([height, 0]);\n\n      // peg values to max and min if out of range\n      for (var i = 0; i < myData.length; i++) {\n        if (Number(myData[i].value) < this.min) {\n          myData[i].value = this.min;\n        } else if (Number(myData[i].value) > this.max) {\n          myData[i].value = this.max;\n        }\n      }\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(\n          d3\n            .axisBottom(x)\n            .tickFormat(d3.timeFormat(\"%m/%d\"))\n            .ticks(formatXTicks)\n        );\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"axis\")\n        .call(d3.axisLeft(y).tickFormat(formatYTicks));\n\n      let line = d3\n        .line()\n        .x(d => x(parseTime(d.time_value)))\n        .y(d => y(+d.value));\n\n      svg\n        .append(\"path\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", DIRECTION_THEME.gradientMiddle)\n        .attr(\"stroke-width\", 3)\n        .attr(\"d\", line(myData));\n\n      svg\n        .selectAll(\"circle\")\n        .data(myData)\n        .enter()\n        .append(\"circle\")\n        .attr(\"r\", 5)\n        .attr(\"cx\", d => x(parseTime(d.time_value)))\n        .attr(\"cy\", d => y(+d.value))\n        .style(\"fill\", DIRECTION_THEME.gradientMiddle);\n\n      // label the y-axis\n      var label = this.getYAxis();\n      svg\n        .append(\"text\")\n        .attr(\"class\", \"axis-text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 0 - margin.left)\n        .attr(\"x\", 0 - height / 2)\n        .attr(\"dy\", \"0.75em\")\n        .style(\"text-anchor\", \"middle\")\n        .text(label);\n\n      // label the x-axis\n      svg\n        .append(\"text\")\n        .attr(\"class\", \"axis-text\")\n        .attr(\n          \"transform\",\n          \"translate(\" + width / 2 + \", \" + (height + margin.top + 30) + \")\"\n        )\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Date\");\n\n      // label the chart\n      this.getChartTitle();\n      var chartTitle = this.getChartTitle();\n      svg\n        .append(\"text\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \", \" + 0 + \")\")\n        .style(\"text-anchor\", \"middle\")\n        .text(chartTitle);\n\n      // line chart tooltip\n      let focus = svg\n        .append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n      focus\n        .append(\"rect\")\n        .attr(\"class\", \"tooltip\")\n        .attr(\"width\", 80)\n        .attr(\"height\", 30)\n        .attr(\"x\", -40)\n        .attr(\"y\", -40)\n        .attr(\"rx\", 4)\n        .attr(\"ry\", 4)\n        .style(\"fill\", \"white\")\n        .style(\"stroke\", \"#666\");\n\n      focus\n        .append(\"text\")\n        .attr(\"class\", \"tooltip-date\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"y\", -20)\n        .style(\"font-size\", \"12px\");\n\n      svg\n        .append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .on(\"mouseover\", function() {\n          focus.style(\"display\", null);\n        })\n        .on(\"mouseout\", function() {\n          focus.style(\"display\", \"none\");\n        })\n        .on(\"mousemove\", mousemove);\n\n      function mousemove() {\n        try {\n          var x0 = x.invert(d3.mouse(this)[0]);\n          var i = bisectDate(myData, +calculateValFromRectified(x0), 1);\n          var d0 = myData[i - 1];\n          var d1 = myData[i];\n          var d =\n            x0 - parseTime(d0.time_value) > parseTime(d1.time_value) - x0\n              ? d1\n              : d0;\n          focus.attr(\n            \"transform\",\n            \"translate(\" + x(parseTime(d.time_value)) + \",\" + y(d.value) + \")\"\n          );\n          focus\n            .select(\".tooltip-date\")\n            .text(\n              d3.timeFormat(\"%m/%d\")(parseTime(d.time_value)) +\n                \": \" +\n                formatYTicks(d.value)\n            );\n        } catch (err) {\n          // just ignore error and bravely carry on\n          // console.log(err);\n        }\n      }\n    }\n  }\n\n  function calculateValFromRectified(rectified) {\n    let tempDate = new Date(rectified);\n    let year = tempDate.getFullYear();\n    let month = (\"0\" + (tempDate.getMonth() + 1)).slice(-2);\n    let date = (\"0\" + tempDate.getDate()).slice(-2);\n    return year + month + date;\n  }\n\n  function calculateSD() {\n    var dataStats = {\n      fb_survey: { Mean: 0.8079823818179086, StDv: 0.562744728536263 },\n      ght: { Mean: 816.6838496834541, StDv: 1393.0004748818299 },\n      \"google-survey\": {\n        Mean: 0.08931870876166044,\n        StDv: 0.026190562137119736\n      },\n      quidel: { Mean: 0.7633679440541352, StDv: 0.14096501061147534 },\n      optum: { Mean: 0.006030485489803647, StDv: 0.013801679072425752 }\n    };\n    var sensor = $currentSensor;\n    console.log(\"sensor: \" + sensor);\n    var sd = dataStats[sensor].StDv;\n    var avg = dataStats[sensor].Mean;\n    var upperbound = avg + 2 * sd;\n    var lowerbound = avg - 2 * sd;\n    userCharts[currentChart].setRange(lowerbound, upperbound);\n  }\n</script>\n\n<style>\n  .graph-title {\n    text-align: center;\n    font-size: 14px;\n    margin: 0px;\n  }\n  .graph-description {\n    text-align: center;\n    margin: 5px 0px 0px 0px;\n    font-size: 14px;\n    font-style: italic;\n  }\n</style>\n\n<div class=\"graph-container\">\n  <h5 class=\"graph-title\">{t}</h5>\n  <p class=\"graph-description\">{$currentRegionName}</p>\n\n  <div bind:clientWidth={w}>\n    <div bind:this={el} />\n  </div>\n</div>\n",
    "<script>\n  import { signalType } from \"./stores.js\";\n  import { DIRECTION_THEME } from \"./theme.js\";\n</script>\n\n<style>\n  .legend {\n    font-size: 0.8rem;\n    /* border-radius: 8px; */\n    padding: 10px 10px;\n    box-sizing: border-box;\n    background-color: rgba(255, 255, 255, 0.7);\n    transition: all 0.1s ease-in;\n    height: 100%;\n  }\n\n  .legend:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  .legend.value {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .color {\n    width: 20px;\n    height: 100%;\n    /* border-radius: 50%; */\n    margin-right: 10px;\n    display: inline-block;\n    /* border: 1px solid #dbdbdb; */\n    border-top-style: none;\n  }\n\n  .legend p {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    color: rgba(0, 0, 0, 0.7);\n    margin: 0px 0px;\n    padding: 0px;\n  }\n\n  .direction-indicators {\n    margin-right: 6px;\n  }\n\n  .legend-bar {\n    width: 20px;\n    height: 100%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  .direction-p {\n    height: 33%;\n  }\n</style>\n\n<div\n  aria-label=\"legend\"\n  class=\"legend {$signalType === 'value' ? 'value' : ''}\">\n  {#if $signalType === 'direction'}\n    <p class=\"direction-p\">\n      <span\n        class=\"color inc\"\n        style=\"background-color: {DIRECTION_THEME.increasing}\" />\n      <span aria-hidden=\"true\" class=\"direction-indicators inc\">&#8599;</span>\n      Increasing\n    </p>\n    <p class=\"direction-p\">\n      <span\n        class=\"color const\"\n        style=\"background-color: {DIRECTION_THEME.steady}\" />\n      <span aria-hidden=\"true\" class=\"direction-indicators const\">&#8594;</span>\n      Steady\n    </p>\n    <p class=\"direction-p\">\n      <span\n        class=\"color dec\"\n        style=\"background-color: {DIRECTION_THEME.decreasing}\" />\n      <span aria-hidden=\"true\" class=\"direction-indicators dec\">&#8600;</span>\n      Decreasing\n    </p>\n  {:else}\n    <p>High</p>\n    <div\n      class=\"legend-bar\"\n      style=\"background: linear-gradient(to top, {DIRECTION_THEME.gradientMin}, {DIRECTION_THEME.gradientMiddle},\n      {DIRECTION_THEME.gradientMax})\" />\n    <p>None</p>\n  {/if}\n</div>\n",
    "<script>\n  import mapboxgl from 'mapbox-gl';\n  import {\n    levels,\n    currentRegion,\n    currentRegionName,\n    geojsons,\n    currentSensor,\n    currentLevel,\n    currentDate,\n    currentData,\n    currentRange,\n    signalType,\n    currentDataReadyOnMay,\n    metaData,\n    sensors,\n  } from './stores.js';\n  import { DIRECTION_THEME, MAP_THEME } from './theme.js';\n\n  const LAT = -1.2;\n  const LON = -0.5;\n  const ZOOM = 4.3; // should be set to 4.4 as default\n\n  let container;\n  let map;\n  let popup;\n  let hoveredId;\n  let clickedId;\n\n  // Boolean tracking if the map has been initialized.\n  let mounted = false;\n\n  // Mouse event handlers\n  const onMouseEnter = level => e => {\n    // popup\n    map.getCanvas().style.cursor = 'pointer';\n\n    var title = e.features[0].properties.NAME;\n    popup\n      .setLngLat(e.lngLat)\n      .setHTML(title)\n      .addTo(map);\n  };\n  const onMouseMove = level => e => {\n    // hover state\n    if (hoveredId) {\n      map.setFeatureState({ source: level, id: hoveredId }, { hover: false });\n    }\n    hoveredId = e.features[0].id;\n    map.setFeatureState({ source: level, id: hoveredId }, { hover: true });\n\n    // popup\n    var title = e.features[0].properties.NAME;\n    popup.setLngLat(e.lngLat).setHTML(title);\n  };\n  const onMouseLeave = level => e => {\n    // hover state\n    if (hoveredId) {\n      map.setFeatureState({ source: level, id: hoveredId }, { hover: false });\n    }\n    hoveredId = null;\n\n    map.getCanvas().style.cursor = '';\n    popup.remove();\n  };\n  const onClick = level => e => {\n    if (clickedId) {\n      map.setFeatureState({ source: level, id: clickedId }, { select: false });\n    }\n\n    if (clickedId !== e.features[0].id) {\n      clickedId = e.features[0].id;\n      console.log(clickedId);\n      map.setFeatureState({ source: level, id: clickedId }, { select: true });\n      currentRegionName.set(e.features[0].properties.NAME);\n      currentRegion.set(e.features[0].properties.id);\n    } else {\n      clickedId = null;\n      currentRegionName.set('');\n      currentRegion.set('');\n    }\n  };\n\n  // If it hasn't been initialized and we have geojsons and initial data, create map.\n  $: if (\n    !map &&\n    $geojsons.size !== 0 &&\n    //  && $currentData.length !== 0\n    $metaData.length !== 0\n  ) {\n    initializeMap();\n  }\n\n  // Update the map when sensor or level changes.\n  currentData.subscribe(_ => {\n    try {\n      updateMap('data');\n    } catch (err) {\n      console.log(err);\n    }\n  });\n  currentLevel.subscribe(_ => {\n    try {\n      updateMap('data');\n    } catch (err) {\n      console.log(err);\n    }\n  });\n  currentDate.subscribe(_ => {\n    try {\n      updateMap('data');\n    } catch (err) {\n      console.log(err);\n    }\n  });\n  signalType.subscribe(_ => {\n    try {\n      updateMap('signal');\n    } catch (err) {\n      console.log(err);\n    }\n  });\n\n  function updateMap(type) {\n    if (!mounted) return;\n    window.performance.mark('update-map-start');\n    Object.keys($levels).forEach(level => map && map.removeFeatureState({ source: level }));\n\n    if (type === 'data') {\n      map.getLayer($currentLevel) && map.removeLayer($currentLevel);\n    }\n\n    console.log($metaData);\n    console.log($currentSensor, $currentLevel);\n    let thisMeta = $metaData.find(d => d.data_source === $currentSensor && d.geo_type === $currentLevel);\n    let statData = $sensors.find(d => d.id === $currentSensor);\n    let valueMinMax = [statData.mean - 2 * statData.std, statData.mean + 2 * statData.std];\n    // console.log(thisMeta);\n\n    // let valueMinMax = [thisMeta.min_value, thisMeta.max_value];\n    let valueMappedVals = new Map();\n    let directionMappedVals = new Map();\n\n    let geoIds = new Set(\n      $currentData.map(d => {\n        const key = d.geo_value.toUpperCase();\n\n        if (d.value !== null) {\n          valueMappedVals.set(key, d.value);\n        }\n        if (d.direction !== null) {\n          directionMappedVals.set(key, d.direction);\n        }\n\n        return key;\n      }),\n    );\n\n    currentRange.set($signalType === 'value' ? valueMinMax : [-1, 1]);\n\n    let dat = $geojsons.get($currentLevel);\n    dat.features.forEach(d => {\n      const id = d.properties.id;\n\n      d.properties.value = -100;\n      d.properties.direction = -100;\n      if (geoIds.has(id) && valueMappedVals.get(id) !== null) {\n        d.properties.value = valueMappedVals.get(id);\n      }\n      if (geoIds.has(id) && directionMappedVals.get(id) !== null) {\n        d.properties.direction = directionMappedVals.get(id);\n      }\n    });\n\n    let stops;\n    if ($signalType === 'value') {\n      let center = valueMinMax[0] + (valueMinMax[1] - valueMinMax[0]) / 2;\n      stops = [\n        [valueMinMax[0], DIRECTION_THEME.gradientMin],\n        [center, DIRECTION_THEME.gradientMiddle],\n        [valueMinMax[1], DIRECTION_THEME.gradientMax],\n      ];\n    } else {\n      stops = [[-1, DIRECTION_THEME.decreasing], [0, DIRECTION_THEME.steady], [1, DIRECTION_THEME.increasing]];\n    }\n    console.log('data update');\n    console.log(dat);\n    if (['data', 'init'].includes(type)) {\n      map.getSource($currentLevel).setData(dat);\n    }\n\n    Object.keys($levels).forEach(name => {\n      if (name === $currentLevel) {\n        if (map.getLayer(name)) {\n          map.setPaintProperty(name, 'fill-color', {\n            property: $signalType,\n            stops: stops,\n          });\n          map.setLayoutProperty(name, 'visibility', 'visible');\n        } else {\n          map.addLayer(\n            {\n              id: $currentLevel,\n              source: $currentLevel,\n              type: 'fill',\n              filter: ['!=', $signalType, -100],\n              paint: {\n                'fill-outline-color': '#616161',\n                'fill-color': {\n                  property: $signalType,\n                  stops: stops,\n                },\n              },\n            },\n            `${$currentLevel}-hover`,\n          );\n        }\n      } else {\n        map.getLayer(name) && map.setLayoutProperty(name, 'visibility', 'none');\n      }\n    });\n\n    if (type === 'init') {\n      const viableFeatures = dat.features.filter(f => f.properties[$signalType] !== -100);\n\n      const index = Math.floor(Math.random() * (viableFeatures.length - 1));\n      console.log(dat.features);\n      console.log(viableFeatures, viableFeatures.length, index);\n      const randomFeature = viableFeatures[index];\n      console.log(randomFeature);\n      currentRegionName.set(randomFeature.properties.NAME);\n      currentRegion.set(randomFeature.properties.id);\n      clickedId = randomFeature.id;\n      map.setFeatureState({ source: $currentLevel, id: clickedId }, { select: true });\n    }\n\n    currentDataReadyOnMay.set(true);\n    window.performance.measure('update-map', 'update-map-start');\n  }\n\n  function initializeMap() {\n    map = new mapboxgl.Map({\n      attributionControl: false,\n      container,\n      style: './maps/mapbox_albers_usa_style.json',\n      center: [LON, LAT],\n      zoom: ZOOM,\n      minZoom: ZOOM,\n    })\n      .addControl(new mapboxgl.AttributionControl({ compact: true }))\n      .addControl(new mapboxgl.NavigationControl({ showCompass: false }), 'top-right');\n\n    map.on('data', ev => {\n      if (ev.dataType === 'source') {\n        if (ev.coord && ev.coord.key) {\n          if (ev.isSourceLoaded) {\n            window.performance.measure(`Load ${ev.coord.key}`, `Start Load ${ev.coord.key}`);\n          } else {\n            window.performance.mark(`Start Load ${ev.coord.key}`);\n          }\n        } else {\n          window.performance.measure(`Load Data`, `Start Load Data`);\n        }\n      } else {\n        // console.log(ev);\n      }\n    });\n    map.on('dataloading', ev => {\n      if (ev.dataType === 'source') {\n        if (ev.coord && ev.coord.key) {\n          if (ev.isSourceLoaded) {\n            window.performance.measure(`Load ${ev.coord.key}`, `Start Load ${ev.coord.key}`);\n          } else {\n            window.performance.mark(`Start Load ${ev.coord.key}`);\n          }\n        } else {\n          window.performance.mark(`Start Load Data`);\n        }\n      } else {\n        // console.log(ev);\n      }\n    });\n\n    //Disable touch zoom, it makes gesture scrolling difficult\n    map.scrollZoom.disable();\n\n    map.on('load', function() {\n      map.addSource('county-outline', {\n        type: 'geojson',\n        data: $geojsons.get('county'),\n      });\n      map.addSource('state-outline', {\n        type: 'geojson',\n        data: $geojsons.get('state'),\n      });\n      map.addSource('city-point', {\n        type: 'geojson',\n        data: $geojsons.get('city'),\n        cluster: true,\n        clusterMaxZoom: 14, // Max zoom to cluster points on\n        clusterRadius: 100, // Radius of each cluster when clustering points (defaults to 50),\n        clusterProperties: {\n          largest: [\n            [\n              'case',\n              ['<', ['get', 'rank', ['accumulated']], ['get', 'rank', ['get', 'largest']]],\n              ['accumulated'],\n              ['properties'],\n            ],\n            ['properties'],\n          ],\n        },\n      });\n      map.addLayer({\n        id: 'county-outline',\n        source: 'county-outline',\n        type: 'fill',\n        paint: {\n          'fill-color': '#e4dac4',\n          'fill-outline-color': '#e0e0e0',\n          'fill-opacity': 0.4,\n        },\n      });\n      map.addLayer({\n        id: 'state-outline',\n        source: 'state-outline',\n        type: 'fill',\n        paint: {\n          'fill-color': 'rgba(0, 0, 0, 0)',\n          'fill-outline-color': '#bcbcbc',\n        },\n      });\n\n      Object.keys($levels).forEach(name => {\n        const data = $geojsons.get(name);\n        map.addSource(name, {\n          type: 'geojson',\n          data: $geojsons.get(name),\n        });\n        console.log(data);\n        map.addLayer({\n          id: `${name}-hover`,\n          source: name,\n          type: 'line',\n          paint: {\n            'line-color': MAP_THEME.hoverRegionOutline,\n            'line-width': ['case', ['any', ['boolean', ['feature-state', 'hover'], false]], 2, 0],\n          },\n        });\n        map.addLayer({\n          id: `${name}-selected`,\n          source: name,\n          type: 'line',\n          paint: {\n            'line-color': MAP_THEME.selectedRegionOutline,\n            'line-width': ['case', ['any', ['boolean', ['feature-state', 'select'], false]], 2, 0],\n          },\n        });\n      });\n\n      map.addLayer({\n        id: 'city-point-unclustered',\n        source: 'city-point',\n        type: 'symbol',\n        filter: ['!', ['has', 'point_count']],\n        layout: {\n          'text-field': ['get', 'city'],\n          'text-font': ['Open Sans Regular'],\n          'text-size': 12,\n        },\n        paint: {\n          'text-halo-color': '#fff',\n          'text-halo-width': 2,\n        },\n      });\n      map.addLayer({\n        id: 'city-point-clustered',\n        source: 'city-point',\n        type: 'symbol',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': ['get', 'city', ['get', 'largest']],\n          'text-font': ['Open Sans Regular'],\n          'text-size': 12,\n        },\n        paint: {\n          'text-halo-color': '#fff',\n          'text-halo-width': 2,\n        },\n      });\n\n      mounted = true;\n      updateMap('init');\n    });\n\n    popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false,\n    });\n    Object.keys($levels).forEach(level => {\n      map.on('mouseenter', level, onMouseEnter(level));\n      map.on('mousemove', level, onMouseMove(level));\n      map.on('mouseleave', level, onMouseLeave(level));\n      map.on('click', level, onClick(level));\n    });\n  }\n\n  function zoomBack() {}\n</script>\n\n<style>\n  .map-container {\n    width: 100%;\n    height: 90vh;\n    position: relative;\n  }\n\n  .state-buttons-holder {\n    position: absolute;\n    top: 92px;\n    right: 9px;\n    z-index: 100;\n  }\n\n  .state-buttons-holder button:focus {\n    outline: none;\n  }\n\n  .state-buttons-holder .pg-button {\n    font-size: 23px;\n    position: relative;\n    width: 29px;\n    height: 29px;\n    color: #3a3a3a;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n    padding: 0;\n    box-sizing: content-box;\n    background-color: white;\n    border: 1px solid #d5d5d5;\n    border-radius: 4px;\n    text-align: center;\n    font-family: 'FranklinITCProBold', Helvetica, Arial, sans-serif;\n    line-height: 16px;\n    cursor: pointer;\n    text-decoration: none;\n    user-select: none;\n    transition-delay: 0s;\n    transition-duration: 0.15s;\n    transition-property: background-color;\n    transition-timing-function: ease-in-out;\n  }\n\n  .state-buttons-holder .pg-button:hover {\n    background-color: rgb(213, 213, 213);\n  }\n\n  .state-buttons-holder .pg-button img {\n    width: 90%;\n    /* height: 100%; */\n  }\n</style>\n\n<div bind:this={container} class=\"map-container\">\n  <div class=\"state-buttons-holder\">\n    <button\n      aria-label=\"show entire map\"\n      data-state=\"us48\"\n      id=\"bounds-button\"\n      class=\"pg-button bounds-button\"\n      on:click={_ => map.easeTo({ center: [LON, LAT], zoom: ZOOM })}>\n      <img src=\"./assets/imgs/us48.png\" alt=\"\" />\n    </button>\n  </div>\n</div>\n",
    "<script>\n  import { sensors, currentSensor, levels, currentLevel, signalType } from './stores.js';\n\n  let hide = false;\n\n  function toggleHide() {\n    hide = !hide;\n  }\n</script>\n\n<style>\n  .options {\n    font-size: 0.8rem;\n    width: 100%;\n    position: relative;\n  }\n\n  .toggle-button {\n    width: 28px;\n    height: 28px;\n    /* border-radius: 5px; */\n    cursor: pointer;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n\n    transition: all 0.1s ease-in;\n  }\n\n  .toggle-button:hover {\n    background-color: rgb(228, 228, 228);\n  }\n\n  .toggle-button-icon {\n    width: 24px;\n    height: 24px;\n  }\n\n  .option {\n    width: 100%;\n  }\n\n  .buttons-group-title {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 5px;\n\n    font-weight: 600;\n    font-size: 1em;\n  }\n\n  .buttons-group {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .buttons-group button.button {\n    width: 100%;\n    margin: 0;\n    font-size: 1em;\n    font-weight: 400;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-top-color: transparent;\n    border-width: 1px;\n    color: #6c757d;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n\n    transition: all 0.1s ease-in;\n\n    position: relative;\n  }\n\n  .buttons-group .button:first-child {\n    border-top-color: #dbdbdb;\n    /* border-top-left-radius: 4px; */\n    /* border-top-right-radius: 4px; */\n  }\n\n  .buttons-group .button:last-child {\n    /* border-bottom-left-radius: 4px; */\n    /* border-bottom-right-radius: 4px; */\n  }\n\n  .buttons-group button.button:disabled {\n    background-color: rgb(211, 211, 211);\n    color: #6c757d;\n    cursor: not-allowed;\n  }\n\n  .buttons-group button.button .disabled-tooltip {\n    visibility: hidden;\n    width: 100px;\n    background-color: #444;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 5px;\n    position: absolute;\n    z-index: 1;\n    top: -5px;\n    left: 105%;\n  }\n\n  .buttons-group button.button .disabled-tooltip::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent #444 transparent transparent;\n  }\n\n  .buttons-group button.button:hover .disabled-tooltip {\n    visibility: visible;\n  }\n\n  .buttons-group-side {\n    width: 100%;\n    display: flex;\n    align-items: stretch;\n    justify-content: stretch;\n  }\n\n  .buttons-group-side button.button {\n    /* width: 50%; */\n    flex-grow: 1;\n    margin: 0;\n    font-size: 1em;\n    font-weight: 400;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-left-color: transparent;\n    border-width: 1px;\n    color: #6c757d;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n\n    transition: all 0.1s ease-in;\n\n    position: relative;\n  }\n\n  .buttons-group-side button.button:disabled {\n    background-color: rgb(211, 211, 211);\n    color: #6c757d;\n    cursor: not-allowed;\n  }\n\n  .buttons-group-side .button:first-child {\n    border-left-color: #dbdbdb;\n    /* border-top-left-radius: 4px; */\n    /* border-bottom-left-radius: 4px; */\n  }\n\n  .buttons-group-side .button:last-child {\n    /* border-top-right-radius: 4px; */\n    /* border-bottom-right-radius: 4px; */\n  }\n\n  .buttons-group-side button.button .disabled-tooltip {\n    visibility: hidden;\n    width: 100px;\n    background-color: #444;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 5px;\n    position: absolute;\n    z-index: 1;\n    top: 150%;\n    left: 50%;\n    margin-left: -60px;\n  }\n\n  .buttons-group-side button.button .disabled-tooltip::after {\n    content: '';\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent #444 transparent;\n  }\n  .buttons-group-side button.button:hover .disabled-tooltip {\n    visibility: visible;\n  }\n\n  .buttons-group .button.selected,\n  .buttons-group-side .button.selected {\n    background-color: rgb(108, 117, 125);\n    /* border-color: transparent; */\n    color: #fff;\n    font-weight: 600;\n  }\n\n  .buttons-group .button:hover,\n  .buttons-group-side .button:hover {\n    background-color: #5a6268;\n    color: #fff;\n  }\n\n  .buttons-group .button:focus,\n  .buttons-group .button:active,\n  .buttons-group-side .button:focus,\n  .buttons-group-side .button:active {\n    box-shadow: none !important;\n    outline: none;\n  }\n\n  /* button.button:disabled:hover {\n    animation: shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n    transform: translate3d(0, 0, 0);\n  } */\n\n  @keyframes shake {\n    10%,\n    90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n\n    20%,\n    80% {\n      transform: translate3d(2px, 0, 0);\n    }\n\n    30%,\n    50%,\n    70% {\n      transform: translate3d(-4px, 0, 0);\n    }\n\n    40%,\n    60% {\n      transform: translate3d(4px, 0, 0);\n    }\n  }\n</style>\n\n<div class=\"options\">\n  {#if hide}\n    <button aria-label=\"toggle options\" class=\"toggle-button\" on:click={toggleHide}>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/layers-24px.svg\" alt=\"\" />\n    </button>\n  {:else}\n    <button aria-label=\"toggle options\" class=\"toggle-button\" on:click={toggleHide}>\n      <img class=\"toggle-button-icon\" src=\"./assets/imgs/layers_clear-24px.svg\" alt=\"\" />\n    </button>\n\n    <div class=\"option\">\n      <!-- <div class=\"buttons-group-title\">Geographic Level</div> -->\n      <div aria-label=\"geographic level\" class=\"buttons-group\">\n        {#each Object.keys($levels) as level}\n          <button\n            class=\"button {$currentLevel === level ? 'selected' : ''}\"\n            on:click={() => currentLevel.set(level)}\n            disabled={$sensors.find(d => d.id === $currentSensor).levels.includes(level) === false}>\n            {#if $sensors.find(d => d.id === $currentSensor).levels.includes(level) === false}\n              <span class=\"disabled-tooltip\">Currently unavailable</span>\n            {/if}\n            {$levels[level]}\n          </button>\n        {/each}\n        <!-- {#each $sensors.find(d => d.id === $currentSensor).levels as level}\n          <button class=\"button {$currentLevel === level ? 'selected' : ''}\" on:click={() => currentLevel.set(level)}>\n            {$levels[level]}\n          </button>\n        {/each} -->\n      </div>\n    </div>\n\n    <br />\n\n    <div class=\"option\">\n      <!-- <div class=\"buttons-group-title\">Signal Type</div> -->\n      <div aria-label=\"display type\" class=\"buttons-group-side\">\n        <button class=\"button {$signalType === 'value' ? 'selected' : ''}\" on:click={() => signalType.set('value')}>\n          Intensity\n        </button>\n        <button\n          class=\"button {$signalType === 'direction' ? 'selected' : ''}\"\n          on:click={() => signalType.set('direction')}\n          disabled={$currentSensor === 'fb_survey'}>\n          {#if $currentSensor === 'fb_survey'}\n            <span class=\"disabled-tooltip\">Currently unavailable</span>\n          {/if}\n          Direction\n        </button>\n\n      </div>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import { sensors, currentSensor, levels, currentLevel, signalType, currentDataReadyOnMay } from './stores.js';\n\n  let hide = false;\n\n  function toggleHide() {\n    hide = !hide;\n  }\n</script>\n\n<style>\n  .options {\n    font-size: 0.8rem;\n    width: 100%;\n    position: relative;\n  }\n\n  .option {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .buttons-group-title {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 15px;\n\n    font-weight: 600;\n    font-size: 1em;\n    line-height: 1em;\n  }\n\n  .buttons-group-side {\n    display: flex;\n    align-items: stretch;\n    /* justify-content: center; */\n    /* flex-wrap: wrap; */\n  }\n\n  .buttons-group-side .button {\n    margin: 0;\n    font-size: 1em;\n    font-weight: 400;\n    line-height: 1em;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-left-color: transparent;\n    border-width: 1px;\n    color: #6c757d;\n    cursor: pointer;\n    justify-content: center;\n    padding-bottom: calc(0.5em - 1px);\n    padding-left: 1em;\n    padding-right: 1em;\n    padding-top: calc(0.5em - 1px);\n    text-align: center;\n    /* white-space: nowrap; */\n\n    transition: all 0.1s ease-in;\n  }\n\n  .buttons-group-side .button:first-child {\n    border-left-color: #dbdbdb;\n    /* border-top-left-radius: 4px; */\n    /* border-bottom-left-radius: 4px; */\n  }\n\n  .buttons-group-side .button:last-child {\n    /* border-top-right-radius: 4px; */\n    /* border-bottom-right-radius: 4px; */\n  }\n\n  .buttons-group-side .button.selected {\n    background-color: rgb(108, 117, 125);\n    /* border-color: transparent; */\n    color: #fff;\n    font-weight: 600;\n  }\n\n  .buttons-group-side .button:hover {\n    background-color: #5a6268;\n    color: #fff;\n  }\n\n  .buttons-group-side .button:focus,\n  .buttons-group-side .button:active {\n    box-shadow: none !important;\n    outline: none;\n  }\n</style>\n\n<div class=\"options\">\n  <div class=\"option\">\n    <!-- <div class=\"buttons-group-title\">Data Source</div> -->\n    <div aria-label=\"Data Source\" class=\"buttons-group-side\">\n      {#each $sensors as sensor}\n        <button\n          class=\"button {$currentSensor === sensor.id ? 'selected' : ''}\"\n          on:click={() => {\n            currentDataReadyOnMay.set(false);\n            currentSensor.set(sensor.id);\n          }}>\n          {sensor.name}\n        </button>\n      {/each}\n    </div>\n  </div>\n\n</div>\n",
    "<script>\n  import { onMount } from 'svelte';\n  import { currentDate, times, currentSensor, currentDataReadyOnMay } from './stores.js';\n  import * as d3 from 'd3';\n\n  let timeSliderPaddingLeft;\n  let timeSliderPaddingRight;\n  let timeSlider;\n  let selectedDateDisplay;\n\n  let parseTime = d3.timeParse('%Y%m%d');\n  let formatTime = d3.timeFormat('%B %d, %Y');\n  let formatTimeWithoutYear = d3.timeFormat('%B %d');\n\n  let interval = 14;\n  let rectifiedRange = interval;\n  let sliderTotalLength = 320; // in px\n  let canLoadMore = true;\n\n  let val = $currentDate;\n  let min = $currentDate;\n  let max = $currentDate;\n\n  let today = new Date(\n    new Date()\n      .toJSON()\n      .slice(0, 10)\n      .replace(/-/g, '/'),\n  );\n  let yesterday = new Date(today.getTime() - 86400 * 1000);\n\n  let rectifiedVal = parseTime(val).getTime();\n  let rectifiedMax = yesterday.getTime();\n  let rectifiedMin = rectifiedMax - rectifiedRange * 86400 * 1000;\n\n  let dataRangeMin = parseTime(min).getTime();\n  let dataRangeMax = parseTime(max).getTime();\n\n  let prettyDate = '';\n  $: prettyDate = formatTime(new Date(rectifiedVal));\n\n  currentDate.subscribe(d => {\n    val = d;\n    rectifiedVal = parseTime(val).getTime();\n  });\n  times.subscribe(t => (t ? update($currentSensor, t) : ''));\n  currentSensor.subscribe(s => ($times ? update(s, $times, true) : ''));\n\n  function update(s, t, newSensor = false) {\n    if (newSensor) {\n      // reset range\n      rectifiedRange = interval;\n      rectifiedMin = rectifiedMax - rectifiedRange * 86400 * 1000;\n    }\n\n    max = t.get(s)[1];\n    min = t.get(s)[0];\n    dataRangeMin = parseTime(min).getTime();\n    dataRangeMax = parseTime(max).getTime();\n\n    updateSliderUI();\n\n    currentDate.set(max);\n  }\n\n  function updateSliderUI() {\n    if (dataRangeMax <= rectifiedMax && dataRangeMin >= rectifiedMin) {\n      /**\n       * fall within\n       *    -------------------\n       *        ---------\n       */\n      let leftPercentage = (dataRangeMin - rectifiedMin) / (rectifiedRange * 86400 * 1000);\n      let middlePercentage = (dataRangeMax - dataRangeMin) / (rectifiedRange * 86400 * 1000);\n      let rightPercentage = (rectifiedMax - dataRangeMax) / (rectifiedRange * 86400 * 1000);\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', dataRangeMin);\n      timeSlider.setAttribute('max', dataRangeMax);\n      canLoadMore = false;\n    } else if (dataRangeMax <= rectifiedMax && dataRangeMin <= rectifiedMin) {\n      /**\n       *\n       *    -------------------\n       *  ---------\n       */\n      let leftPercentage = 0;\n      let middlePercentage = (dataRangeMax - rectifiedMin) / (rectifiedRange * 86400 * 1000);\n      let rightPercentage = (rectifiedMax - dataRangeMax) / (rectifiedRange * 86400 * 1000);\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', rectifiedMin);\n      timeSlider.setAttribute('max', dataRangeMax);\n      canLoadMore = true;\n    } else if (dataRangeMax >= rectifiedMax && dataRangeMin >= rectifiedMin) {\n      /**\n       *\n       *    -------------------\n       *                ---------\n       */\n      let leftPercentage = (dataRangeMin - rectifiedMin) / (rectifiedRange * 86400 * 1000);\n      let middlePercentage = (rectifiedMax - dataRangeMin) / (rectifiedRange * 86400 * 1000);\n      let rightPercentage = 0;\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', dataRangeMin);\n      timeSlider.setAttribute('max', rectifiedMax);\n      canLoadMore = false;\n    } else if (dataRangeMax >= rectifiedMax && dataRangeMin <= rectifiedMin) {\n      /**\n       *\n       *    -------------------\n       *  -----------------------\n       */\n      let leftPercentage = 0;\n      let middlePercentage = 1;\n      let rightPercentage = 0;\n      timeSliderPaddingLeft.setAttribute('style', `width: ${Math.round(leftPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('style', `width: ${Math.round(middlePercentage * sliderTotalLength) + 'px'}`);\n      timeSliderPaddingRight.setAttribute('style', `width: ${Math.round(rightPercentage * sliderTotalLength) + 'px'}`);\n      timeSlider.setAttribute('min', rectifiedMin);\n      timeSlider.setAttribute('max', rectifiedMax);\n      canLoadMore = true;\n    }\n\n    console.log(canLoadMore);\n  }\n\n  function calculateValFromRectified(rectified) {\n    let tempDate = new Date(rectified);\n    let year = tempDate.getFullYear();\n    let month = ('0' + (tempDate.getMonth() + 1)).slice(-2);\n    let date = ('0' + tempDate.getDate()).slice(-2);\n    return year + month + date;\n  }\n\n  function sliderOnMouseUp() {\n    window.performance.mark('start sliderOnMouseUp');\n    currentDataReadyOnMay.set(false);\n    currentDate.set(calculateValFromRectified(rectifiedVal));\n    window.performance.measure('sliderOnMouseUp', 'start sliderOnMouseUp');\n  }\n\n  function loadMoreDataRange() {\n    rectifiedRange += interval;\n    rectifiedMin = rectifiedMax - rectifiedRange * 86400 * 1000;\n    updateSliderUI();\n  }\n\n  // currentDataReadyOnMay.subscribe(d => console.log('map set:', d));\n</script>\n\n<style>\n  .time {\n    display: inline-flex;\n    align-items: center;\n    width: 100%;\n    position: relative;\n  }\n\n  .selected-date {\n    position: absolute;\n    top: -20px;\n    left: 10px;\n    /* width: 300px; */\n    height: 24px;\n    /* background-color: lightgray; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .load-more-button {\n    position: absolute;\n    bottom: -18px;\n    left: 10px;\n\n    margin: 0;\n    font-size: 0.7rem;\n    font-weight: 300;\n    background-color: #fff;\n    border-style: solid;\n    border-color: #dbdbdb;\n    border-width: 1px;\n    color: #6c757d;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: calc(0.3rem - 1px);\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    padding-top: calc(0.3rem - 1px);\n\n    transition: all 0.1s ease-in;\n  }\n\n  .load-more-button:hover {\n    background-color: #5a6268;\n    color: #fff;\n  }\n\n  .load-more-button:focus {\n    outline: none;\n  }\n\n  .load-more-button:disabled {\n    background-color: rgb(211, 211, 211);\n    color: #6c757d;\n    cursor: not-allowed;\n    font-weight: 300;\n    font-size: 0.7rem;\n    transform: none;\n  }\n\n  /* .load-more-button:disabled:hover {\n    animation: shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n    transform: translate3d(0, 0, 0);\n  } */\n\n  @keyframes shake {\n    10%,\n    90% {\n      transform: translate3d(-1px, 0, 0);\n    }\n\n    20%,\n    80% {\n      transform: translate3d(2px, 0, 0);\n    }\n\n    30%,\n    50%,\n    70% {\n      transform: translate3d(-4px, 0, 0);\n    }\n\n    40%,\n    60% {\n      transform: translate3d(4px, 0, 0);\n    }\n  }\n\n  .time p {\n    flex-shrink: 0;\n    margin-left: 10px;\n    margin-right: 10px;\n    color: var(--grey);\n  }\n\n  .time p.min-max {\n    font-size: 0.8rem;\n    color: #666;\n  }\n\n  #timeSliderPaddingLeft,\n  #timeSliderPaddingRight {\n    /* flex-grow: 1; */\n    height: 6px;\n    padding: 0;\n    border-style: none;\n    /* background: #7e7e7e; */\n    background: repeating-linear-gradient(-45deg, #666, #666 2px, #eee 2px, #eee 4px);\n    outline: none;\n    opacity: 0.7;\n  }\n\n  #timeSliderPaddingLeft {\n    position: relative;\n  }\n\n  .slider {\n    /* flex-grow: 1; */\n    -webkit-appearance: none;\n    width: 320px;\n    height: 6px;\n    padding: 0;\n    border-style: none;\n    background: #d3d3d3;\n    outline: none;\n    opacity: 0.7;\n  }\n\n  .slider::-moz-focus-outer {\n    border: 0;\n  }\n\n  .slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: var(--red);\n    cursor: pointer;\n  }\n\n  .slider::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: var(--red);\n    cursor: pointer;\n  }\n\n  .loader-container {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: -40px;\n    width: 40px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .loader {\n    border: 4px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 4px solid #c41230;\n    width: 20px;\n    height: 20px;\n    -webkit-animation: spin 1s linear infinite; /* Safari */\n    animation: spin 1s linear infinite;\n  }\n\n  /* Safari */\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n\n<div aria-label=\"date\" class=\"time\">\n  <div aria-live=\"assertive\" id=\"time-label\" class=\"selected-date\" bind:this={selectedDateDisplay}>\n    Viewing estimates for: {formatTimeWithoutYear(new Date(rectifiedVal))}\n  </div>\n\n  <button class=\"load-more-button\" on:click={loadMoreDataRange} disabled={!canLoadMore}>Load 2 more weeks</button>\n\n  <p aria-label=\"minimum value\" class=\"min-max\">{formatTime(new Date(rectifiedMin))}</p>\n  <div id=\"timeSliderPaddingLeft\" bind:this={timeSliderPaddingLeft} />\n  <input\n    aria-controls=\"time-label\"\n    id=\"time_slider\"\n    bind:this={timeSlider}\n    type=\"range\"\n    min={rectifiedMin}\n    max={rectifiedMax}\n    step={86400000}\n    aria-label={formatTimeWithoutYear(new Date(rectifiedVal))}\n    on:mouseup={sliderOnMouseUp}\n    on:keyup={sliderOnMouseUp}\n    class=\"slider\"\n    bind:value={rectifiedVal} />\n  <div id=\"timeSliderPaddingRight\" bind:this={timeSliderPaddingRight} />\n  <p aria-label=\"maximum value\" class=\"min-max\">{formatTime(new Date(rectifiedMax))} (Yesterday)</p>\n\n  {#if $currentDataReadyOnMay === false}\n    <div class=\"loader-container\">\n      <div class=\"loader\" />\n    </div>\n  {/if}\n\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}